// source: notification.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with "MSG_" and isn"t a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf")
var goog = jspb
var global = (function () { return this || window || global || self || Function("return this")() }).call(null)

var google_protobuf_empty_pb = require("google-protobuf/google/protobuf/empty_pb.js")
goog.object.extend(proto, google_protobuf_empty_pb)
var google_protobuf_field_mask_pb = require("google-protobuf/google/protobuf/field_mask_pb.js")
goog.object.extend(proto, google_protobuf_field_mask_pb)
var google_protobuf_timestamp_pb = require("google-protobuf/google/protobuf/timestamp_pb.js")
goog.object.extend(proto, google_protobuf_timestamp_pb)
goog.exportSymbol("proto.CreateNotificationExceptionRequest", null, global)
goog.exportSymbol("proto.DeleteNotificationExceptionRequest", null, global)
goog.exportSymbol("proto.GetNotificationExceptionRequest", null, global)
goog.exportSymbol("proto.ListNotificationExceptionsRequest", null, global)
goog.exportSymbol("proto.ListNotificationExceptionsResponse", null, global)
goog.exportSymbol("proto.NotificationException", null, global)
goog.exportSymbol("proto.UpdateNotificationExceptionRequest", null, global)
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.NotificationException = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.NotificationException, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.NotificationException.displayName = "proto.NotificationException"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GetNotificationExceptionRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.GetNotificationExceptionRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GetNotificationExceptionRequest.displayName = "proto.GetNotificationExceptionRequest"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CreateNotificationExceptionRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.CreateNotificationExceptionRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CreateNotificationExceptionRequest.displayName = "proto.CreateNotificationExceptionRequest"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UpdateNotificationExceptionRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.UpdateNotificationExceptionRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UpdateNotificationExceptionRequest.displayName = "proto.UpdateNotificationExceptionRequest"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DeleteNotificationExceptionRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.DeleteNotificationExceptionRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DeleteNotificationExceptionRequest.displayName = "proto.DeleteNotificationExceptionRequest"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListNotificationExceptionsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.ListNotificationExceptionsRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ListNotificationExceptionsRequest.displayName = "proto.ListNotificationExceptionsRequest"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListNotificationExceptionsResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ListNotificationExceptionsResponse.repeatedFields_, null)
}
goog.inherits(proto.ListNotificationExceptionsResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ListNotificationExceptionsResponse.displayName = "proto.ListNotificationExceptionsResponse"
}



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.NotificationException.prototype.toObject = function (opt_includeInstance) {
    return proto.NotificationException.toObject(opt_includeInstance, this)
  }


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.NotificationException} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.NotificationException.toObject = function (includeInstance, msg) {
    var f, obj = {
      uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
      sourceSystem: jspb.Message.getFieldWithDefault(msg, 2, ""),
      userEmail: jspb.Message.getFieldWithDefault(msg, 3, ""),
      notificationName: jspb.Message.getFieldWithDefault(msg, 4, ""),
      justification: jspb.Message.getFieldWithDefault(msg, 5, ""),
      createdOnTime: (f = msg.getCreatedOnTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      validUntilTime: (f = msg.getValidUntilTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
    }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.NotificationException}
 */
proto.NotificationException.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.NotificationException
  return proto.NotificationException.deserializeBinaryFromReader(msg, reader)
}


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.NotificationException} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.NotificationException}
 */
proto.NotificationException.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setUuid(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setSourceSystem(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setUserEmail(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setNotificationName(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setJustification(value)
        break
      case 6:
        var value = new google_protobuf_timestamp_pb.Timestamp
        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader)
        msg.setCreatedOnTime(value)
        break
      case 7:
        var value = new google_protobuf_timestamp_pb.Timestamp
        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader)
        msg.setValidUntilTime(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.NotificationException.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.NotificationException.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.NotificationException} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.NotificationException.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getUuid()
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    )
  }
  f = message.getSourceSystem()
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    )
  }
  f = message.getUserEmail()
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    )
  }
  f = message.getNotificationName()
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    )
  }
  f = message.getJustification()
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    )
  }
  f = message.getCreatedOnTime()
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    )
  }
  f = message.getValidUntilTime()
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    )
  }
}


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.NotificationException.prototype.getUuid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""))
}


/**
 * @param {string} value
 * @return {!proto.NotificationException} returns this
 */
proto.NotificationException.prototype.setUuid = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}


/**
 * optional string source_system = 2;
 * @return {string}
 */
proto.NotificationException.prototype.getSourceSystem = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""))
}


/**
 * @param {string} value
 * @return {!proto.NotificationException} returns this
 */
proto.NotificationException.prototype.setSourceSystem = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}


/**
 * optional string user_email = 3;
 * @return {string}
 */
proto.NotificationException.prototype.getUserEmail = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""))
}


/**
 * @param {string} value
 * @return {!proto.NotificationException} returns this
 */
proto.NotificationException.prototype.setUserEmail = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}


/**
 * optional string notification_name = 4;
 * @return {string}
 */
proto.NotificationException.prototype.getNotificationName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""))
}


/**
 * @param {string} value
 * @return {!proto.NotificationException} returns this
 */
proto.NotificationException.prototype.setNotificationName = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}


/**
 * optional string justification = 5;
 * @return {string}
 */
proto.NotificationException.prototype.getJustification = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""))
}


/**
 * @param {string} value
 * @return {!proto.NotificationException} returns this
 */
proto.NotificationException.prototype.setJustification = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}


/**
 * optional google.protobuf.Timestamp created_on_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.NotificationException.prototype.getCreatedOnTime = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6))
}


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.NotificationException} returns this
*/
proto.NotificationException.prototype.setCreatedOnTime = function (value) {
  return jspb.Message.setWrapperField(this, 6, value)
}


/**
 * Clears the message field making it undefined.
 * @return {!proto.NotificationException} returns this
 */
proto.NotificationException.prototype.clearCreatedOnTime = function () {
  return this.setCreatedOnTime(undefined)
}


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.NotificationException.prototype.hasCreatedOnTime = function () {
  return jspb.Message.getField(this, 6) != null
}


/**
 * optional google.protobuf.Timestamp valid_until_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.NotificationException.prototype.getValidUntilTime = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7))
}


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.NotificationException} returns this
*/
proto.NotificationException.prototype.setValidUntilTime = function (value) {
  return jspb.Message.setWrapperField(this, 7, value)
}


/**
 * Clears the message field making it undefined.
 * @return {!proto.NotificationException} returns this
 */
proto.NotificationException.prototype.clearValidUntilTime = function () {
  return this.setValidUntilTime(undefined)
}


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.NotificationException.prototype.hasValidUntilTime = function () {
  return jspb.Message.getField(this, 7) != null
}





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.GetNotificationExceptionRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.GetNotificationExceptionRequest.toObject(opt_includeInstance, this)
  }


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.GetNotificationExceptionRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.GetNotificationExceptionRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      uuid: jspb.Message.getFieldWithDefault(msg, 1, "")
    }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GetNotificationExceptionRequest}
 */
proto.GetNotificationExceptionRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.GetNotificationExceptionRequest
  return proto.GetNotificationExceptionRequest.deserializeBinaryFromReader(msg, reader)
}


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GetNotificationExceptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GetNotificationExceptionRequest}
 */
proto.GetNotificationExceptionRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setUuid(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GetNotificationExceptionRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.GetNotificationExceptionRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GetNotificationExceptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetNotificationExceptionRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getUuid()
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    )
  }
}


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.GetNotificationExceptionRequest.prototype.getUuid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""))
}


/**
 * @param {string} value
 * @return {!proto.GetNotificationExceptionRequest} returns this
 */
proto.GetNotificationExceptionRequest.prototype.setUuid = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.CreateNotificationExceptionRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.CreateNotificationExceptionRequest.toObject(opt_includeInstance, this)
  }


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.CreateNotificationExceptionRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.CreateNotificationExceptionRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      exception: (f = msg.getException()) && proto.NotificationException.toObject(includeInstance, f)
    }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CreateNotificationExceptionRequest}
 */
proto.CreateNotificationExceptionRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.CreateNotificationExceptionRequest
  return proto.CreateNotificationExceptionRequest.deserializeBinaryFromReader(msg, reader)
}


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CreateNotificationExceptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CreateNotificationExceptionRequest}
 */
proto.CreateNotificationExceptionRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = new proto.NotificationException
        reader.readMessage(value, proto.NotificationException.deserializeBinaryFromReader)
        msg.setException(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CreateNotificationExceptionRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.CreateNotificationExceptionRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CreateNotificationExceptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateNotificationExceptionRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getException()
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.NotificationException.serializeBinaryToWriter
    )
  }
}


/**
 * optional NotificationException exception = 1;
 * @return {?proto.NotificationException}
 */
proto.CreateNotificationExceptionRequest.prototype.getException = function () {
  return /** @type{?proto.NotificationException} */ (
    jspb.Message.getWrapperField(this, proto.NotificationException, 1))
}


/**
 * @param {?proto.NotificationException|undefined} value
 * @return {!proto.CreateNotificationExceptionRequest} returns this
*/
proto.CreateNotificationExceptionRequest.prototype.setException = function (value) {
  return jspb.Message.setWrapperField(this, 1, value)
}


/**
 * Clears the message field making it undefined.
 * @return {!proto.CreateNotificationExceptionRequest} returns this
 */
proto.CreateNotificationExceptionRequest.prototype.clearException = function () {
  return this.setException(undefined)
}


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CreateNotificationExceptionRequest.prototype.hasException = function () {
  return jspb.Message.getField(this, 1) != null
}





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.UpdateNotificationExceptionRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.UpdateNotificationExceptionRequest.toObject(opt_includeInstance, this)
  }


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.UpdateNotificationExceptionRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.UpdateNotificationExceptionRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      exception: (f = msg.getException()) && proto.NotificationException.toObject(includeInstance, f),
      updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
    }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UpdateNotificationExceptionRequest}
 */
proto.UpdateNotificationExceptionRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.UpdateNotificationExceptionRequest
  return proto.UpdateNotificationExceptionRequest.deserializeBinaryFromReader(msg, reader)
}


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UpdateNotificationExceptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UpdateNotificationExceptionRequest}
 */
proto.UpdateNotificationExceptionRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = new proto.NotificationException
        reader.readMessage(value, proto.NotificationException.deserializeBinaryFromReader)
        msg.setException(value)
        break
      case 2:
        var value = new google_protobuf_field_mask_pb.FieldMask
        reader.readMessage(value, google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader)
        msg.setUpdateMask(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UpdateNotificationExceptionRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.UpdateNotificationExceptionRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UpdateNotificationExceptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UpdateNotificationExceptionRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getException()
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.NotificationException.serializeBinaryToWriter
    )
  }
  f = message.getUpdateMask()
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    )
  }
}


/**
 * optional NotificationException exception = 1;
 * @return {?proto.NotificationException}
 */
proto.UpdateNotificationExceptionRequest.prototype.getException = function () {
  return /** @type{?proto.NotificationException} */ (
    jspb.Message.getWrapperField(this, proto.NotificationException, 1))
}


/**
 * @param {?proto.NotificationException|undefined} value
 * @return {!proto.UpdateNotificationExceptionRequest} returns this
*/
proto.UpdateNotificationExceptionRequest.prototype.setException = function (value) {
  return jspb.Message.setWrapperField(this, 1, value)
}


/**
 * Clears the message field making it undefined.
 * @return {!proto.UpdateNotificationExceptionRequest} returns this
 */
proto.UpdateNotificationExceptionRequest.prototype.clearException = function () {
  return this.setException(undefined)
}


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpdateNotificationExceptionRequest.prototype.hasException = function () {
  return jspb.Message.getField(this, 1) != null
}


/**
 * optional google.protobuf.FieldMask update_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.UpdateNotificationExceptionRequest.prototype.getUpdateMask = function () {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2))
}


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.UpdateNotificationExceptionRequest} returns this
*/
proto.UpdateNotificationExceptionRequest.prototype.setUpdateMask = function (value) {
  return jspb.Message.setWrapperField(this, 2, value)
}


/**
 * Clears the message field making it undefined.
 * @return {!proto.UpdateNotificationExceptionRequest} returns this
 */
proto.UpdateNotificationExceptionRequest.prototype.clearUpdateMask = function () {
  return this.setUpdateMask(undefined)
}


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpdateNotificationExceptionRequest.prototype.hasUpdateMask = function () {
  return jspb.Message.getField(this, 2) != null
}





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.DeleteNotificationExceptionRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.DeleteNotificationExceptionRequest.toObject(opt_includeInstance, this)
  }


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.DeleteNotificationExceptionRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.DeleteNotificationExceptionRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      uuid: jspb.Message.getFieldWithDefault(msg, 1, "")
    }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DeleteNotificationExceptionRequest}
 */
proto.DeleteNotificationExceptionRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.DeleteNotificationExceptionRequest
  return proto.DeleteNotificationExceptionRequest.deserializeBinaryFromReader(msg, reader)
}


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DeleteNotificationExceptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DeleteNotificationExceptionRequest}
 */
proto.DeleteNotificationExceptionRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setUuid(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DeleteNotificationExceptionRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.DeleteNotificationExceptionRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DeleteNotificationExceptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DeleteNotificationExceptionRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getUuid()
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    )
  }
}


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.DeleteNotificationExceptionRequest.prototype.getUuid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""))
}


/**
 * @param {string} value
 * @return {!proto.DeleteNotificationExceptionRequest} returns this
 */
proto.DeleteNotificationExceptionRequest.prototype.setUuid = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ListNotificationExceptionsRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.ListNotificationExceptionsRequest.toObject(opt_includeInstance, this)
  }


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ListNotificationExceptionsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ListNotificationExceptionsRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      userEmail: jspb.Message.getFieldWithDefault(msg, 1, ""),
      pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
      pageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
    }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListNotificationExceptionsRequest}
 */
proto.ListNotificationExceptionsRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.ListNotificationExceptionsRequest
  return proto.ListNotificationExceptionsRequest.deserializeBinaryFromReader(msg, reader)
}


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListNotificationExceptionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListNotificationExceptionsRequest}
 */
proto.ListNotificationExceptionsRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setUserEmail(value)
        break
      case 2:
        var value = /** @type {number} */ (reader.readInt32())
        msg.setPageSize(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setPageToken(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListNotificationExceptionsRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.ListNotificationExceptionsRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListNotificationExceptionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListNotificationExceptionsRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getUserEmail()
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    )
  }
  f = message.getPageSize()
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    )
  }
  f = message.getPageToken()
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    )
  }
}


/**
 * optional string user_email = 1;
 * @return {string}
 */
proto.ListNotificationExceptionsRequest.prototype.getUserEmail = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""))
}


/**
 * @param {string} value
 * @return {!proto.ListNotificationExceptionsRequest} returns this
 */
proto.ListNotificationExceptionsRequest.prototype.setUserEmail = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}


/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.ListNotificationExceptionsRequest.prototype.getPageSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0))
}


/**
 * @param {number} value
 * @return {!proto.ListNotificationExceptionsRequest} returns this
 */
proto.ListNotificationExceptionsRequest.prototype.setPageSize = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value)
}


/**
 * optional string page_token = 3;
 * @return {string}
 */
proto.ListNotificationExceptionsRequest.prototype.getPageToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""))
}


/**
 * @param {string} value
 * @return {!proto.ListNotificationExceptionsRequest} returns this
 */
proto.ListNotificationExceptionsRequest.prototype.setPageToken = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ListNotificationExceptionsResponse.repeatedFields_ = [1]



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ListNotificationExceptionsResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.ListNotificationExceptionsResponse.toObject(opt_includeInstance, this)
  }


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ListNotificationExceptionsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ListNotificationExceptionsResponse.toObject = function (includeInstance, msg) {
    var f, obj = {
      exceptionsList: jspb.Message.toObjectList(msg.getExceptionsList(),
        proto.NotificationException.toObject, includeInstance),
      nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
    }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListNotificationExceptionsResponse}
 */
proto.ListNotificationExceptionsResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.ListNotificationExceptionsResponse
  return proto.ListNotificationExceptionsResponse.deserializeBinaryFromReader(msg, reader)
}


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListNotificationExceptionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListNotificationExceptionsResponse}
 */
proto.ListNotificationExceptionsResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = new proto.NotificationException
        reader.readMessage(value, proto.NotificationException.deserializeBinaryFromReader)
        msg.addExceptions(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setNextPageToken(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListNotificationExceptionsResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.ListNotificationExceptionsResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListNotificationExceptionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListNotificationExceptionsResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getExceptionsList()
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.NotificationException.serializeBinaryToWriter
    )
  }
  f = message.getNextPageToken()
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    )
  }
}


/**
 * repeated NotificationException exceptions = 1;
 * @return {!Array<!proto.NotificationException>}
 */
proto.ListNotificationExceptionsResponse.prototype.getExceptionsList = function () {
  return /** @type{!Array<!proto.NotificationException>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.NotificationException, 1))
}


/**
 * @param {!Array<!proto.NotificationException>} value
 * @return {!proto.ListNotificationExceptionsResponse} returns this
*/
proto.ListNotificationExceptionsResponse.prototype.setExceptionsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value)
}


/**
 * @param {!proto.NotificationException=} opt_value
 * @param {number=} opt_index
 * @return {!proto.NotificationException}
 */
proto.ListNotificationExceptionsResponse.prototype.addExceptions = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.NotificationException, opt_index)
}


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ListNotificationExceptionsResponse} returns this
 */
proto.ListNotificationExceptionsResponse.prototype.clearExceptionsList = function () {
  return this.setExceptionsList([])
}


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.ListNotificationExceptionsResponse.prototype.getNextPageToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""))
}


/**
 * @param {string} value
 * @return {!proto.ListNotificationExceptionsResponse} returns this
 */
proto.ListNotificationExceptionsResponse.prototype.setNextPageToken = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}


goog.object.extend(exports, proto)
