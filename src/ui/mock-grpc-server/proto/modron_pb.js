// source: modron.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.APIKey', null, global);
goog.exportSymbol('proto.Bucket', null, global);
goog.exportSymbol('proto.Bucket.AccessControlType', null, global);
goog.exportSymbol('proto.Bucket.AccessType', null, global);
goog.exportSymbol('proto.Bucket.EncryptionPolicy', null, global);
goog.exportSymbol('proto.Bucket.RetentionPolicy', null, global);
goog.exportSymbol('proto.Certificate', null, global);
goog.exportSymbol('proto.Certificate.Type', null, global);
goog.exportSymbol('proto.CollectAndScanRequest', null, global);
goog.exportSymbol('proto.CollectAndScanResponse', null, global);
goog.exportSymbol('proto.CreateObservationRequest', null, global);
goog.exportSymbol('proto.Database', null, global);
goog.exportSymbol('proto.Database.AuthorizedNetworks', null, global);
goog.exportSymbol('proto.Database.AvailabilityType', null, global);
goog.exportSymbol('proto.Database.BackupConfiguration', null, global);
goog.exportSymbol('proto.Database.EncryptionType', null, global);
goog.exportSymbol('proto.Database.PasswordPolicy', null, global);
goog.exportSymbol('proto.ExportedCredentials', null, global);
goog.exportSymbol('proto.GetStatusCollectAndScanRequest', null, global);
goog.exportSymbol('proto.GetStatusCollectAndScanResponse', null, global);
goog.exportSymbol('proto.IamGroup', null, global);
goog.exportSymbol('proto.IamGroup.DynamicGroupMetadata', null, global);
goog.exportSymbol('proto.IamGroup.DynamicGroupMetadata.Query', null, global);
goog.exportSymbol('proto.IamGroup.DynamicGroupMetadata.Status', null, global);
goog.exportSymbol('proto.IamGroup.EntityKey', null, global);
goog.exportSymbol('proto.IamGroup.Member', null, global);
goog.exportSymbol('proto.IamGroup.Member.Role', null, global);
goog.exportSymbol('proto.IamGroup.Member.Type', null, global);
goog.exportSymbol('proto.IamPolicy', null, global);
goog.exportSymbol('proto.KubernetesCluster', null, global);
goog.exportSymbol('proto.ListObservationsRequest', null, global);
goog.exportSymbol('proto.ListObservationsResponse', null, global);
goog.exportSymbol('proto.LoadBalancer', null, global);
goog.exportSymbol('proto.LoadBalancer.Type', null, global);
goog.exportSymbol('proto.Network', null, global);
goog.exportSymbol('proto.Observation', null, global);
goog.exportSymbol('proto.Permission', null, global);
goog.exportSymbol('proto.Remediation', null, global);
goog.exportSymbol('proto.RequestStatus', null, global);
goog.exportSymbol('proto.Resource', null, global);
goog.exportSymbol('proto.Resource.TypeCase', null, global);
goog.exportSymbol('proto.ResourceGroup', null, global);
goog.exportSymbol('proto.ResourceGroupObservationsPair', null, global);
goog.exportSymbol('proto.RuleObservationPair', null, global);
goog.exportSymbol('proto.ScanResultsList', null, global);
goog.exportSymbol('proto.ServiceAccount', null, global);
goog.exportSymbol('proto.SslPolicy', null, global);
goog.exportSymbol('proto.SslPolicy.MinTlsVersion', null, global);
goog.exportSymbol('proto.SslPolicy.Profile', null, global);
goog.exportSymbol('proto.VmInstance', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ExportedCredentials = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ExportedCredentials, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ExportedCredentials.displayName = 'proto.ExportedCredentials';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VmInstance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.VmInstance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.VmInstance.displayName = 'proto.VmInstance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Network = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Network.repeatedFields_, null);
};
goog.inherits(proto.Network, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Network.displayName = 'proto.Network';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.KubernetesCluster = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.KubernetesCluster.repeatedFields_, null);
};
goog.inherits(proto.KubernetesCluster, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.KubernetesCluster.displayName = 'proto.KubernetesCluster';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Database = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Database.repeatedFields_, null);
};
goog.inherits(proto.Database, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Database.displayName = 'proto.Database';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IamGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.IamGroup.repeatedFields_, null);
};
goog.inherits(proto.IamGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.IamGroup.displayName = 'proto.IamGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IamGroup.EntityKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IamGroup.EntityKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.IamGroup.EntityKey.displayName = 'proto.IamGroup.EntityKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IamGroup.Member = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IamGroup.Member, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.IamGroup.Member.displayName = 'proto.IamGroup.Member';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IamGroup.DynamicGroupMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.IamGroup.DynamicGroupMetadata.repeatedFields_, null);
};
goog.inherits(proto.IamGroup.DynamicGroupMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.IamGroup.DynamicGroupMetadata.displayName = 'proto.IamGroup.DynamicGroupMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IamGroup.DynamicGroupMetadata.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IamGroup.DynamicGroupMetadata.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.IamGroup.DynamicGroupMetadata.Query.displayName = 'proto.IamGroup.DynamicGroupMetadata.Query';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IamGroup.DynamicGroupMetadata.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IamGroup.DynamicGroupMetadata.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.IamGroup.DynamicGroupMetadata.Status.displayName = 'proto.IamGroup.DynamicGroupMetadata.Status';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Bucket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Bucket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Bucket.displayName = 'proto.Bucket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Bucket.RetentionPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Bucket.RetentionPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Bucket.RetentionPolicy.displayName = 'proto.Bucket.RetentionPolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Bucket.EncryptionPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Bucket.EncryptionPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Bucket.EncryptionPolicy.displayName = 'proto.Bucket.EncryptionPolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.APIKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.APIKey.repeatedFields_, null);
};
goog.inherits(proto.APIKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.APIKey.displayName = 'proto.APIKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Permission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Permission.repeatedFields_, null);
};
goog.inherits(proto.Permission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Permission.displayName = 'proto.Permission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IamPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.IamPolicy.repeatedFields_, null);
};
goog.inherits(proto.IamPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.IamPolicy.displayName = 'proto.IamPolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SslPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SslPolicy.repeatedFields_, null);
};
goog.inherits(proto.SslPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SslPolicy.displayName = 'proto.SslPolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ServiceAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ServiceAccount.repeatedFields_, null);
};
goog.inherits(proto.ServiceAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ServiceAccount.displayName = 'proto.ServiceAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ResourceGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ResourceGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ResourceGroup.displayName = 'proto.ResourceGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.LoadBalancer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.LoadBalancer.repeatedFields_, null);
};
goog.inherits(proto.LoadBalancer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.LoadBalancer.displayName = 'proto.LoadBalancer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Certificate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Certificate.repeatedFields_, null);
};
goog.inherits(proto.Certificate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Certificate.displayName = 'proto.Certificate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Resource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.Resource.oneofGroups_);
};
goog.inherits(proto.Resource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Resource.displayName = 'proto.Resource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Remediation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Remediation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Remediation.displayName = 'proto.Remediation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Observation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Observation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Observation.displayName = 'proto.Observation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ScanResultsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ScanResultsList.repeatedFields_, null);
};
goog.inherits(proto.ScanResultsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ScanResultsList.displayName = 'proto.ScanResultsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GetStatusCollectAndScanResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GetStatusCollectAndScanResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GetStatusCollectAndScanResponse.displayName = 'proto.GetStatusCollectAndScanResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GetStatusCollectAndScanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GetStatusCollectAndScanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GetStatusCollectAndScanRequest.displayName = 'proto.GetStatusCollectAndScanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CollectAndScanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CollectAndScanRequest.repeatedFields_, null);
};
goog.inherits(proto.CollectAndScanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CollectAndScanRequest.displayName = 'proto.CollectAndScanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CollectAndScanResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CollectAndScanResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CollectAndScanResponse.displayName = 'proto.CollectAndScanResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListObservationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ListObservationsRequest.repeatedFields_, null);
};
goog.inherits(proto.ListObservationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ListObservationsRequest.displayName = 'proto.ListObservationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CreateObservationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CreateObservationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CreateObservationRequest.displayName = 'proto.CreateObservationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RuleObservationPair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RuleObservationPair.repeatedFields_, null);
};
goog.inherits(proto.RuleObservationPair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RuleObservationPair.displayName = 'proto.RuleObservationPair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ResourceGroupObservationsPair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ResourceGroupObservationsPair.repeatedFields_, null);
};
goog.inherits(proto.ResourceGroupObservationsPair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ResourceGroupObservationsPair.displayName = 'proto.ResourceGroupObservationsPair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListObservationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ListObservationsResponse.repeatedFields_, null);
};
goog.inherits(proto.ListObservationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ListObservationsResponse.displayName = 'proto.ListObservationsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ExportedCredentials.prototype.toObject = function(opt_includeInstance) {
  return proto.ExportedCredentials.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ExportedCredentials} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExportedCredentials.toObject = function(includeInstance, msg) {
  var f, obj = {
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expirationDate: (f = msg.getExpirationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastUsage: (f = msg.getLastUsage()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ExportedCredentials}
 */
proto.ExportedCredentials.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ExportedCredentials;
  return proto.ExportedCredentials.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ExportedCredentials} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ExportedCredentials}
 */
proto.ExportedCredentials.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpirationDate(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUsage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ExportedCredentials.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ExportedCredentials.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ExportedCredentials} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExportedCredentials.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpirationDate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastUsage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp creation_date = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ExportedCredentials.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ExportedCredentials} returns this
*/
proto.ExportedCredentials.prototype.setCreationDate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ExportedCredentials} returns this
 */
proto.ExportedCredentials.prototype.clearCreationDate = function() {
  return this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ExportedCredentials.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp expiration_date = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ExportedCredentials.prototype.getExpirationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ExportedCredentials} returns this
*/
proto.ExportedCredentials.prototype.setExpirationDate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ExportedCredentials} returns this
 */
proto.ExportedCredentials.prototype.clearExpirationDate = function() {
  return this.setExpirationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ExportedCredentials.prototype.hasExpirationDate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp last_usage = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ExportedCredentials.prototype.getLastUsage = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ExportedCredentials} returns this
*/
proto.ExportedCredentials.prototype.setLastUsage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ExportedCredentials} returns this
 */
proto.ExportedCredentials.prototype.clearLastUsage = function() {
  return this.setLastUsage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ExportedCredentials.prototype.hasLastUsage = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VmInstance.prototype.toObject = function(opt_includeInstance) {
  return proto.VmInstance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VmInstance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VmInstance.toObject = function(includeInstance, msg) {
  var f, obj = {
    publicIp: jspb.Message.getFieldWithDefault(msg, 1, ""),
    privateIp: jspb.Message.getFieldWithDefault(msg, 2, ""),
    identity: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VmInstance}
 */
proto.VmInstance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VmInstance;
  return proto.VmInstance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VmInstance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VmInstance}
 */
proto.VmInstance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicIp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivateIp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VmInstance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VmInstance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VmInstance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VmInstance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublicIp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrivateIp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string public_ip = 1;
 * @return {string}
 */
proto.VmInstance.prototype.getPublicIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.VmInstance} returns this
 */
proto.VmInstance.prototype.setPublicIp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string private_ip = 2;
 * @return {string}
 */
proto.VmInstance.prototype.getPrivateIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.VmInstance} returns this
 */
proto.VmInstance.prototype.setPrivateIp = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string identity = 3;
 * @return {string}
 */
proto.VmInstance.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.VmInstance} returns this
 */
proto.VmInstance.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Network.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Network.prototype.toObject = function(opt_includeInstance) {
  return proto.Network.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Network} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Network.toObject = function(includeInstance, msg) {
  var f, obj = {
    ipsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    gcpPrivateGoogleAccessV4: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Network}
 */
proto.Network.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Network;
  return proto.Network.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Network} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Network}
 */
proto.Network.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIps(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGcpPrivateGoogleAccessV4(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Network.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Network.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Network} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Network.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIpsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getGcpPrivateGoogleAccessV4();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated string ips = 1;
 * @return {!Array<string>}
 */
proto.Network.prototype.getIpsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Network} returns this
 */
proto.Network.prototype.setIpsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Network} returns this
 */
proto.Network.prototype.addIps = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Network} returns this
 */
proto.Network.prototype.clearIpsList = function() {
  return this.setIpsList([]);
};


/**
 * optional bool gcp_private_google_access_v4 = 2;
 * @return {boolean}
 */
proto.Network.prototype.getGcpPrivateGoogleAccessV4 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Network} returns this
 */
proto.Network.prototype.setGcpPrivateGoogleAccessV4 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.KubernetesCluster.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.KubernetesCluster.prototype.toObject = function(opt_includeInstance) {
  return proto.KubernetesCluster.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.KubernetesCluster} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.KubernetesCluster.toObject = function(includeInstance, msg) {
  var f, obj = {
    masterAuthorizedNetworksList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    privateCluster: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    masterVersion: jspb.Message.getFieldWithDefault(msg, 3, ""),
    nodesVersion: jspb.Message.getFieldWithDefault(msg, 4, ""),
    location: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.KubernetesCluster}
 */
proto.KubernetesCluster.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.KubernetesCluster;
  return proto.KubernetesCluster.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.KubernetesCluster} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.KubernetesCluster}
 */
proto.KubernetesCluster.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addMasterAuthorizedNetworks(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivateCluster(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMasterVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodesVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.KubernetesCluster.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.KubernetesCluster.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.KubernetesCluster} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.KubernetesCluster.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMasterAuthorizedNetworksList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getPrivateCluster();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMasterVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNodesVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * repeated string master_authorized_networks = 1;
 * @return {!Array<string>}
 */
proto.KubernetesCluster.prototype.getMasterAuthorizedNetworksList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.KubernetesCluster} returns this
 */
proto.KubernetesCluster.prototype.setMasterAuthorizedNetworksList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.KubernetesCluster} returns this
 */
proto.KubernetesCluster.prototype.addMasterAuthorizedNetworks = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.KubernetesCluster} returns this
 */
proto.KubernetesCluster.prototype.clearMasterAuthorizedNetworksList = function() {
  return this.setMasterAuthorizedNetworksList([]);
};


/**
 * optional bool private_cluster = 2;
 * @return {boolean}
 */
proto.KubernetesCluster.prototype.getPrivateCluster = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.KubernetesCluster} returns this
 */
proto.KubernetesCluster.prototype.setPrivateCluster = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string master_version = 3;
 * @return {string}
 */
proto.KubernetesCluster.prototype.getMasterVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.KubernetesCluster} returns this
 */
proto.KubernetesCluster.prototype.setMasterVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string nodes_version = 4;
 * @return {string}
 */
proto.KubernetesCluster.prototype.getNodesVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.KubernetesCluster} returns this
 */
proto.KubernetesCluster.prototype.setNodesVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string location = 5;
 * @return {string}
 */
proto.KubernetesCluster.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.KubernetesCluster} returns this
 */
proto.KubernetesCluster.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Database.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Database.prototype.toObject = function(opt_includeInstance) {
  return proto.Database.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Database} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Database.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    encryption: jspb.Message.getFieldWithDefault(msg, 3, 0),
    address: jspb.Message.getFieldWithDefault(msg, 4, ""),
    autoResize: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    backupConfig: jspb.Message.getFieldWithDefault(msg, 6, 0),
    passwordPolicy: jspb.Message.getFieldWithDefault(msg, 7, 0),
    tlsRequired: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    authorizedNetworksSettingAvailable: jspb.Message.getFieldWithDefault(msg, 9, 0),
    authorizedNetworksList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    availabilityType: jspb.Message.getFieldWithDefault(msg, 11, 0),
    isPublic: jspb.Message.getBooleanFieldWithDefault(msg, 12, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Database}
 */
proto.Database.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Database;
  return proto.Database.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Database} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Database}
 */
proto.Database.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {!proto.Database.EncryptionType} */ (reader.readEnum());
      msg.setEncryption(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoResize(value);
      break;
    case 6:
      var value = /** @type {!proto.Database.BackupConfiguration} */ (reader.readEnum());
      msg.setBackupConfig(value);
      break;
    case 7:
      var value = /** @type {!proto.Database.PasswordPolicy} */ (reader.readEnum());
      msg.setPasswordPolicy(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTlsRequired(value);
      break;
    case 9:
      var value = /** @type {!proto.Database.AuthorizedNetworks} */ (reader.readEnum());
      msg.setAuthorizedNetworksSettingAvailable(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addAuthorizedNetworks(value);
      break;
    case 11:
      var value = /** @type {!proto.Database.AvailabilityType} */ (reader.readEnum());
      msg.setAvailabilityType(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPublic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Database.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Database.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Database} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Database.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEncryption();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAutoResize();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getBackupConfig();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getPasswordPolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getTlsRequired();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getAuthorizedNetworksSettingAvailable();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getAuthorizedNetworksList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getAvailabilityType();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getIsPublic();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.Database.EncryptionType = {
  ENCRYPTION_UNKNOWN: 0,
  INSECURE_CLEAR_TEXT: 1,
  ENCRYPTION_MANAGED: 2,
  ENCRYPTION_USER_MANAGED: 3
};

/**
 * @enum {number}
 */
proto.Database.BackupConfiguration = {
  BACKUP_CONFIG_UNKNOWN: 0,
  BACKUP_CONFIG_DISABLED: 1,
  BACKUP_CONFIG_MANAGED: 2
};

/**
 * @enum {number}
 */
proto.Database.PasswordPolicy = {
  PASSWORD_POLICY_UNKNOWN: 0,
  PASSWORD_POLICY_WEAK: 1,
  PASSWORD_POLICY_STRONG: 2
};

/**
 * @enum {number}
 */
proto.Database.AuthorizedNetworks = {
  AUTHORIZED_NETWORKS_UNKNOWN: 0,
  AUTHORIZED_NETWORKS_NOT_SET: 1,
  AUTHORIZED_NETWORKS_SET: 2
};

/**
 * @enum {number}
 */
proto.Database.AvailabilityType = {
  HA_UNKNOWN: 0,
  NO_HA: 1,
  HA_ZONAL: 2,
  HA_REGIONAL: 3,
  HA_GLOBAL: 4
};

/**
 * optional string type = 1;
 * @return {string}
 */
proto.Database.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.Database.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional EncryptionType encryption = 3;
 * @return {!proto.Database.EncryptionType}
 */
proto.Database.prototype.getEncryption = function() {
  return /** @type {!proto.Database.EncryptionType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.Database.EncryptionType} value
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.setEncryption = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string address = 4;
 * @return {string}
 */
proto.Database.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool auto_resize = 5;
 * @return {boolean}
 */
proto.Database.prototype.getAutoResize = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.setAutoResize = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional BackupConfiguration backup_config = 6;
 * @return {!proto.Database.BackupConfiguration}
 */
proto.Database.prototype.getBackupConfig = function() {
  return /** @type {!proto.Database.BackupConfiguration} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.Database.BackupConfiguration} value
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.setBackupConfig = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional PasswordPolicy password_policy = 7;
 * @return {!proto.Database.PasswordPolicy}
 */
proto.Database.prototype.getPasswordPolicy = function() {
  return /** @type {!proto.Database.PasswordPolicy} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.Database.PasswordPolicy} value
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.setPasswordPolicy = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional bool tls_required = 8;
 * @return {boolean}
 */
proto.Database.prototype.getTlsRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.setTlsRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional AuthorizedNetworks authorized_networks_setting_available = 9;
 * @return {!proto.Database.AuthorizedNetworks}
 */
proto.Database.prototype.getAuthorizedNetworksSettingAvailable = function() {
  return /** @type {!proto.Database.AuthorizedNetworks} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.Database.AuthorizedNetworks} value
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.setAuthorizedNetworksSettingAvailable = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * repeated string authorized_networks = 10;
 * @return {!Array<string>}
 */
proto.Database.prototype.getAuthorizedNetworksList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.setAuthorizedNetworksList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.addAuthorizedNetworks = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.clearAuthorizedNetworksList = function() {
  return this.setAuthorizedNetworksList([]);
};


/**
 * optional AvailabilityType availability_type = 11;
 * @return {!proto.Database.AvailabilityType}
 */
proto.Database.prototype.getAvailabilityType = function() {
  return /** @type {!proto.Database.AvailabilityType} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.Database.AvailabilityType} value
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.setAvailabilityType = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional bool is_public = 12;
 * @return {boolean}
 */
proto.Database.prototype.getIsPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Database} returns this
 */
proto.Database.prototype.setIsPublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.IamGroup.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IamGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.IamGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IamGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    key: (f = msg.getKey()) && proto.IamGroup.EntityKey.toObject(includeInstance, f),
    parent: jspb.Message.getFieldWithDefault(msg, 5, ""),
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updateDate: (f = msg.getUpdateDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    memberList: jspb.Message.toObjectList(msg.getMemberList(),
    proto.IamGroup.Member.toObject, includeInstance),
    dynamicGroupMetadata: (f = msg.getDynamicGroupMetadata()) && proto.IamGroup.DynamicGroupMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IamGroup}
 */
proto.IamGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IamGroup;
  return proto.IamGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IamGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IamGroup}
 */
proto.IamGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new proto.IamGroup.EntityKey;
      reader.readMessage(value,proto.IamGroup.EntityKey.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdateDate(value);
      break;
    case 8:
      var value = new proto.IamGroup.Member;
      reader.readMessage(value,proto.IamGroup.Member.deserializeBinaryFromReader);
      msg.addMember(value);
      break;
    case 9:
      var value = new proto.IamGroup.DynamicGroupMetadata;
      reader.readMessage(value,proto.IamGroup.DynamicGroupMetadata.deserializeBinaryFromReader);
      msg.setDynamicGroupMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IamGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.IamGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.IamGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.IamGroup.EntityKey.serializeBinaryToWriter
    );
  }
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdateDate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMemberList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.IamGroup.Member.serializeBinaryToWriter
    );
  }
  f = message.getDynamicGroupMetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.IamGroup.DynamicGroupMetadata.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IamGroup.EntityKey.prototype.toObject = function(opt_includeInstance) {
  return proto.IamGroup.EntityKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IamGroup.EntityKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamGroup.EntityKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IamGroup.EntityKey}
 */
proto.IamGroup.EntityKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IamGroup.EntityKey;
  return proto.IamGroup.EntityKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IamGroup.EntityKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IamGroup.EntityKey}
 */
proto.IamGroup.EntityKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IamGroup.EntityKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.IamGroup.EntityKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.IamGroup.EntityKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamGroup.EntityKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.IamGroup.EntityKey.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.IamGroup.EntityKey} returns this
 */
proto.IamGroup.EntityKey.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.IamGroup.EntityKey.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.IamGroup.EntityKey} returns this
 */
proto.IamGroup.EntityKey.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IamGroup.Member.prototype.toObject = function(opt_includeInstance) {
  return proto.IamGroup.Member.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IamGroup.Member} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamGroup.Member.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && proto.IamGroup.EntityKey.toObject(includeInstance, f),
    role: jspb.Message.getFieldWithDefault(msg, 2, 0),
    joinDate: (f = msg.getJoinDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IamGroup.Member}
 */
proto.IamGroup.Member.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IamGroup.Member;
  return proto.IamGroup.Member.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IamGroup.Member} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IamGroup.Member}
 */
proto.IamGroup.Member.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.IamGroup.EntityKey;
      reader.readMessage(value,proto.IamGroup.EntityKey.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.IamGroup.Member.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setJoinDate(value);
      break;
    case 4:
      var value = /** @type {!proto.IamGroup.Member.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IamGroup.Member.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.IamGroup.Member.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.IamGroup.Member} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamGroup.Member.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.IamGroup.EntityKey.serializeBinaryToWriter
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getJoinDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.IamGroup.Member.Type = {
  MEMBER_TYPE_UNKNOWN: 0,
  MEMBER_TYPE_USER: 1,
  MEMBER_TYPE_SERVICE_ACCOUNT: 2,
  MEMBER_TYPE_GROUP: 3,
  MEMBER_TYPE_SHARED_DRIVE: 4,
  MEMBER_TYPE_OTHER: 5
};

/**
 * @enum {number}
 */
proto.IamGroup.Member.Role = {
  MEMBER_ROLE_UNKNOWN: 0,
  MEMBER_ROLE_OWNER: 1,
  MEMBER_ROLE_MANAGER: 2,
  MEMBER_ROLE_MEMBER: 3
};

/**
 * optional EntityKey key = 1;
 * @return {?proto.IamGroup.EntityKey}
 */
proto.IamGroup.Member.prototype.getKey = function() {
  return /** @type{?proto.IamGroup.EntityKey} */ (
    jspb.Message.getWrapperField(this, proto.IamGroup.EntityKey, 1));
};


/**
 * @param {?proto.IamGroup.EntityKey|undefined} value
 * @return {!proto.IamGroup.Member} returns this
*/
proto.IamGroup.Member.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.IamGroup.Member} returns this
 */
proto.IamGroup.Member.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.IamGroup.Member.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Role role = 2;
 * @return {!proto.IamGroup.Member.Role}
 */
proto.IamGroup.Member.prototype.getRole = function() {
  return /** @type {!proto.IamGroup.Member.Role} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.IamGroup.Member.Role} value
 * @return {!proto.IamGroup.Member} returns this
 */
proto.IamGroup.Member.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp join_date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.IamGroup.Member.prototype.getJoinDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.IamGroup.Member} returns this
*/
proto.IamGroup.Member.prototype.setJoinDate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.IamGroup.Member} returns this
 */
proto.IamGroup.Member.prototype.clearJoinDate = function() {
  return this.setJoinDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.IamGroup.Member.prototype.hasJoinDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Type type = 4;
 * @return {!proto.IamGroup.Member.Type}
 */
proto.IamGroup.Member.prototype.getType = function() {
  return /** @type {!proto.IamGroup.Member.Type} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.IamGroup.Member.Type} value
 * @return {!proto.IamGroup.Member} returns this
 */
proto.IamGroup.Member.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.IamGroup.DynamicGroupMetadata.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IamGroup.DynamicGroupMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.IamGroup.DynamicGroupMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IamGroup.DynamicGroupMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamGroup.DynamicGroupMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryList: jspb.Message.toObjectList(msg.getQueryList(),
    proto.IamGroup.DynamicGroupMetadata.Query.toObject, includeInstance),
    status: (f = msg.getStatus()) && proto.IamGroup.DynamicGroupMetadata.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IamGroup.DynamicGroupMetadata}
 */
proto.IamGroup.DynamicGroupMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IamGroup.DynamicGroupMetadata;
  return proto.IamGroup.DynamicGroupMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IamGroup.DynamicGroupMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IamGroup.DynamicGroupMetadata}
 */
proto.IamGroup.DynamicGroupMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.IamGroup.DynamicGroupMetadata.Query;
      reader.readMessage(value,proto.IamGroup.DynamicGroupMetadata.Query.deserializeBinaryFromReader);
      msg.addQuery(value);
      break;
    case 2:
      var value = new proto.IamGroup.DynamicGroupMetadata.Status;
      reader.readMessage(value,proto.IamGroup.DynamicGroupMetadata.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IamGroup.DynamicGroupMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.IamGroup.DynamicGroupMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.IamGroup.DynamicGroupMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamGroup.DynamicGroupMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.IamGroup.DynamicGroupMetadata.Query.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.IamGroup.DynamicGroupMetadata.Status.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IamGroup.DynamicGroupMetadata.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.IamGroup.DynamicGroupMetadata.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IamGroup.DynamicGroupMetadata.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamGroup.DynamicGroupMetadata.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resourceType: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IamGroup.DynamicGroupMetadata.Query}
 */
proto.IamGroup.DynamicGroupMetadata.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IamGroup.DynamicGroupMetadata.Query;
  return proto.IamGroup.DynamicGroupMetadata.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IamGroup.DynamicGroupMetadata.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IamGroup.DynamicGroupMetadata.Query}
 */
proto.IamGroup.DynamicGroupMetadata.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IamGroup.DynamicGroupMetadata.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.IamGroup.DynamicGroupMetadata.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.IamGroup.DynamicGroupMetadata.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamGroup.DynamicGroupMetadata.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResourceType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.IamGroup.DynamicGroupMetadata.Query.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.IamGroup.DynamicGroupMetadata.Query} returns this
 */
proto.IamGroup.DynamicGroupMetadata.Query.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string resource_type = 2;
 * @return {string}
 */
proto.IamGroup.DynamicGroupMetadata.Query.prototype.getResourceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.IamGroup.DynamicGroupMetadata.Query} returns this
 */
proto.IamGroup.DynamicGroupMetadata.Query.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IamGroup.DynamicGroupMetadata.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.IamGroup.DynamicGroupMetadata.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IamGroup.DynamicGroupMetadata.Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamGroup.DynamicGroupMetadata.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    time: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IamGroup.DynamicGroupMetadata.Status}
 */
proto.IamGroup.DynamicGroupMetadata.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IamGroup.DynamicGroupMetadata.Status;
  return proto.IamGroup.DynamicGroupMetadata.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IamGroup.DynamicGroupMetadata.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IamGroup.DynamicGroupMetadata.Status}
 */
proto.IamGroup.DynamicGroupMetadata.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IamGroup.DynamicGroupMetadata.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.IamGroup.DynamicGroupMetadata.Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.IamGroup.DynamicGroupMetadata.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamGroup.DynamicGroupMetadata.Status.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.IamGroup.DynamicGroupMetadata.Status.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.IamGroup.DynamicGroupMetadata.Status} returns this
 */
proto.IamGroup.DynamicGroupMetadata.Status.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string time = 2;
 * @return {string}
 */
proto.IamGroup.DynamicGroupMetadata.Status.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.IamGroup.DynamicGroupMetadata.Status} returns this
 */
proto.IamGroup.DynamicGroupMetadata.Status.prototype.setTime = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Query query = 1;
 * @return {!Array<!proto.IamGroup.DynamicGroupMetadata.Query>}
 */
proto.IamGroup.DynamicGroupMetadata.prototype.getQueryList = function() {
  return /** @type{!Array<!proto.IamGroup.DynamicGroupMetadata.Query>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.IamGroup.DynamicGroupMetadata.Query, 1));
};


/**
 * @param {!Array<!proto.IamGroup.DynamicGroupMetadata.Query>} value
 * @return {!proto.IamGroup.DynamicGroupMetadata} returns this
*/
proto.IamGroup.DynamicGroupMetadata.prototype.setQueryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.IamGroup.DynamicGroupMetadata.Query=} opt_value
 * @param {number=} opt_index
 * @return {!proto.IamGroup.DynamicGroupMetadata.Query}
 */
proto.IamGroup.DynamicGroupMetadata.prototype.addQuery = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.IamGroup.DynamicGroupMetadata.Query, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.IamGroup.DynamicGroupMetadata} returns this
 */
proto.IamGroup.DynamicGroupMetadata.prototype.clearQueryList = function() {
  return this.setQueryList([]);
};


/**
 * optional Status status = 2;
 * @return {?proto.IamGroup.DynamicGroupMetadata.Status}
 */
proto.IamGroup.DynamicGroupMetadata.prototype.getStatus = function() {
  return /** @type{?proto.IamGroup.DynamicGroupMetadata.Status} */ (
    jspb.Message.getWrapperField(this, proto.IamGroup.DynamicGroupMetadata.Status, 2));
};


/**
 * @param {?proto.IamGroup.DynamicGroupMetadata.Status|undefined} value
 * @return {!proto.IamGroup.DynamicGroupMetadata} returns this
*/
proto.IamGroup.DynamicGroupMetadata.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.IamGroup.DynamicGroupMetadata} returns this
 */
proto.IamGroup.DynamicGroupMetadata.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.IamGroup.DynamicGroupMetadata.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.IamGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.IamGroup} returns this
 */
proto.IamGroup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.IamGroup.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.IamGroup} returns this
 */
proto.IamGroup.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.IamGroup.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.IamGroup} returns this
 */
proto.IamGroup.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional EntityKey key = 4;
 * @return {?proto.IamGroup.EntityKey}
 */
proto.IamGroup.prototype.getKey = function() {
  return /** @type{?proto.IamGroup.EntityKey} */ (
    jspb.Message.getWrapperField(this, proto.IamGroup.EntityKey, 4));
};


/**
 * @param {?proto.IamGroup.EntityKey|undefined} value
 * @return {!proto.IamGroup} returns this
*/
proto.IamGroup.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.IamGroup} returns this
 */
proto.IamGroup.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.IamGroup.prototype.hasKey = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string parent = 5;
 * @return {string}
 */
proto.IamGroup.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.IamGroup} returns this
 */
proto.IamGroup.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp creation_date = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.IamGroup.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.IamGroup} returns this
*/
proto.IamGroup.prototype.setCreationDate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.IamGroup} returns this
 */
proto.IamGroup.prototype.clearCreationDate = function() {
  return this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.IamGroup.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp update_date = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.IamGroup.prototype.getUpdateDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.IamGroup} returns this
*/
proto.IamGroup.prototype.setUpdateDate = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.IamGroup} returns this
 */
proto.IamGroup.prototype.clearUpdateDate = function() {
  return this.setUpdateDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.IamGroup.prototype.hasUpdateDate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated Member member = 8;
 * @return {!Array<!proto.IamGroup.Member>}
 */
proto.IamGroup.prototype.getMemberList = function() {
  return /** @type{!Array<!proto.IamGroup.Member>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.IamGroup.Member, 8));
};


/**
 * @param {!Array<!proto.IamGroup.Member>} value
 * @return {!proto.IamGroup} returns this
*/
proto.IamGroup.prototype.setMemberList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.IamGroup.Member=} opt_value
 * @param {number=} opt_index
 * @return {!proto.IamGroup.Member}
 */
proto.IamGroup.prototype.addMember = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.IamGroup.Member, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.IamGroup} returns this
 */
proto.IamGroup.prototype.clearMemberList = function() {
  return this.setMemberList([]);
};


/**
 * optional DynamicGroupMetadata dynamic_group_metadata = 9;
 * @return {?proto.IamGroup.DynamicGroupMetadata}
 */
proto.IamGroup.prototype.getDynamicGroupMetadata = function() {
  return /** @type{?proto.IamGroup.DynamicGroupMetadata} */ (
    jspb.Message.getWrapperField(this, proto.IamGroup.DynamicGroupMetadata, 9));
};


/**
 * @param {?proto.IamGroup.DynamicGroupMetadata|undefined} value
 * @return {!proto.IamGroup} returns this
*/
proto.IamGroup.prototype.setDynamicGroupMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.IamGroup} returns this
 */
proto.IamGroup.prototype.clearDynamicGroupMetadata = function() {
  return this.setDynamicGroupMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.IamGroup.prototype.hasDynamicGroupMetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Bucket.prototype.toObject = function(opt_includeInstance) {
  return proto.Bucket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Bucket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Bucket.toObject = function(includeInstance, msg) {
  var f, obj = {
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    retentionPolicy: (f = msg.getRetentionPolicy()) && proto.Bucket.RetentionPolicy.toObject(includeInstance, f),
    encryptionPolicy: (f = msg.getEncryptionPolicy()) && proto.Bucket.EncryptionPolicy.toObject(includeInstance, f),
    accessType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    accessControlType: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Bucket}
 */
proto.Bucket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Bucket;
  return proto.Bucket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Bucket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Bucket}
 */
proto.Bucket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 2:
      var value = new proto.Bucket.RetentionPolicy;
      reader.readMessage(value,proto.Bucket.RetentionPolicy.deserializeBinaryFromReader);
      msg.setRetentionPolicy(value);
      break;
    case 3:
      var value = new proto.Bucket.EncryptionPolicy;
      reader.readMessage(value,proto.Bucket.EncryptionPolicy.deserializeBinaryFromReader);
      msg.setEncryptionPolicy(value);
      break;
    case 4:
      var value = /** @type {!proto.Bucket.AccessType} */ (reader.readEnum());
      msg.setAccessType(value);
      break;
    case 5:
      var value = /** @type {!proto.Bucket.AccessControlType} */ (reader.readEnum());
      msg.setAccessControlType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Bucket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Bucket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Bucket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Bucket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRetentionPolicy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.Bucket.RetentionPolicy.serializeBinaryToWriter
    );
  }
  f = message.getEncryptionPolicy();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.Bucket.EncryptionPolicy.serializeBinaryToWriter
    );
  }
  f = message.getAccessType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAccessControlType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.Bucket.AccessType = {
  ACCESS_UNKNOWN: 0,
  PRIVATE: 1,
  PUBLIC: 2
};

/**
 * @enum {number}
 */
proto.Bucket.AccessControlType = {
  ACCESS_CONTROL_UNKNOWN: 0,
  NON_UNIFORM: 1,
  UNIFORM: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Bucket.RetentionPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.Bucket.RetentionPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Bucket.RetentionPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Bucket.RetentionPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    period: (f = msg.getPeriod()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    isLocked: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Bucket.RetentionPolicy}
 */
proto.Bucket.RetentionPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Bucket.RetentionPolicy;
  return proto.Bucket.RetentionPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Bucket.RetentionPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Bucket.RetentionPolicy}
 */
proto.Bucket.RetentionPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setPeriod(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLocked(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Bucket.RetentionPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Bucket.RetentionPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Bucket.RetentionPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Bucket.RetentionPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeriod();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getIsLocked();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Duration period = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.Bucket.RetentionPolicy.prototype.getPeriod = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.Bucket.RetentionPolicy} returns this
*/
proto.Bucket.RetentionPolicy.prototype.setPeriod = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Bucket.RetentionPolicy} returns this
 */
proto.Bucket.RetentionPolicy.prototype.clearPeriod = function() {
  return this.setPeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Bucket.RetentionPolicy.prototype.hasPeriod = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool is_locked = 2;
 * @return {boolean}
 */
proto.Bucket.RetentionPolicy.prototype.getIsLocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Bucket.RetentionPolicy} returns this
 */
proto.Bucket.RetentionPolicy.prototype.setIsLocked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Bucket.EncryptionPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.Bucket.EncryptionPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Bucket.EncryptionPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Bucket.EncryptionPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    isEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    isKeyCustomerManaged: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Bucket.EncryptionPolicy}
 */
proto.Bucket.EncryptionPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Bucket.EncryptionPolicy;
  return proto.Bucket.EncryptionPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Bucket.EncryptionPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Bucket.EncryptionPolicy}
 */
proto.Bucket.EncryptionPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEnabled(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsKeyCustomerManaged(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Bucket.EncryptionPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Bucket.EncryptionPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Bucket.EncryptionPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Bucket.EncryptionPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getIsKeyCustomerManaged();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool is_enabled = 1;
 * @return {boolean}
 */
proto.Bucket.EncryptionPolicy.prototype.getIsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Bucket.EncryptionPolicy} returns this
 */
proto.Bucket.EncryptionPolicy.prototype.setIsEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool is_key_customer_managed = 2;
 * @return {boolean}
 */
proto.Bucket.EncryptionPolicy.prototype.getIsKeyCustomerManaged = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Bucket.EncryptionPolicy} returns this
 */
proto.Bucket.EncryptionPolicy.prototype.setIsKeyCustomerManaged = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp creation_date = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Bucket.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Bucket} returns this
*/
proto.Bucket.prototype.setCreationDate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Bucket} returns this
 */
proto.Bucket.prototype.clearCreationDate = function() {
  return this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Bucket.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RetentionPolicy retention_policy = 2;
 * @return {?proto.Bucket.RetentionPolicy}
 */
proto.Bucket.prototype.getRetentionPolicy = function() {
  return /** @type{?proto.Bucket.RetentionPolicy} */ (
    jspb.Message.getWrapperField(this, proto.Bucket.RetentionPolicy, 2));
};


/**
 * @param {?proto.Bucket.RetentionPolicy|undefined} value
 * @return {!proto.Bucket} returns this
*/
proto.Bucket.prototype.setRetentionPolicy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Bucket} returns this
 */
proto.Bucket.prototype.clearRetentionPolicy = function() {
  return this.setRetentionPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Bucket.prototype.hasRetentionPolicy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EncryptionPolicy encryption_policy = 3;
 * @return {?proto.Bucket.EncryptionPolicy}
 */
proto.Bucket.prototype.getEncryptionPolicy = function() {
  return /** @type{?proto.Bucket.EncryptionPolicy} */ (
    jspb.Message.getWrapperField(this, proto.Bucket.EncryptionPolicy, 3));
};


/**
 * @param {?proto.Bucket.EncryptionPolicy|undefined} value
 * @return {!proto.Bucket} returns this
*/
proto.Bucket.prototype.setEncryptionPolicy = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Bucket} returns this
 */
proto.Bucket.prototype.clearEncryptionPolicy = function() {
  return this.setEncryptionPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Bucket.prototype.hasEncryptionPolicy = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AccessType access_type = 4;
 * @return {!proto.Bucket.AccessType}
 */
proto.Bucket.prototype.getAccessType = function() {
  return /** @type {!proto.Bucket.AccessType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.Bucket.AccessType} value
 * @return {!proto.Bucket} returns this
 */
proto.Bucket.prototype.setAccessType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional AccessControlType access_control_type = 5;
 * @return {!proto.Bucket.AccessControlType}
 */
proto.Bucket.prototype.getAccessControlType = function() {
  return /** @type {!proto.Bucket.AccessControlType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.Bucket.AccessControlType} value
 * @return {!proto.Bucket} returns this
 */
proto.Bucket.prototype.setAccessControlType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.APIKey.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.APIKey.prototype.toObject = function(opt_includeInstance) {
  return proto.APIKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.APIKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.APIKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    scopesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.APIKey}
 */
proto.APIKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.APIKey;
  return proto.APIKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.APIKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.APIKey}
 */
proto.APIKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addScopes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.APIKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.APIKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.APIKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.APIKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScopesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string scopes = 1;
 * @return {!Array<string>}
 */
proto.APIKey.prototype.getScopesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.APIKey} returns this
 */
proto.APIKey.prototype.setScopesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.APIKey} returns this
 */
proto.APIKey.prototype.addScopes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.APIKey} returns this
 */
proto.APIKey.prototype.clearScopesList = function() {
  return this.setScopesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Permission.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Permission.prototype.toObject = function(opt_includeInstance) {
  return proto.Permission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Permission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Permission.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: jspb.Message.getFieldWithDefault(msg, 1, ""),
    principalsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Permission}
 */
proto.Permission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Permission;
  return proto.Permission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Permission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Permission}
 */
proto.Permission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrincipals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Permission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Permission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Permission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Permission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrincipalsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string role = 1;
 * @return {string}
 */
proto.Permission.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Permission} returns this
 */
proto.Permission.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string principals = 2;
 * @return {!Array<string>}
 */
proto.Permission.prototype.getPrincipalsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Permission} returns this
 */
proto.Permission.prototype.setPrincipalsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Permission} returns this
 */
proto.Permission.prototype.addPrincipals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Permission} returns this
 */
proto.Permission.prototype.clearPrincipalsList = function() {
  return this.setPrincipalsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.IamPolicy.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IamPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.IamPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IamPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = msg.getResource()) && proto.Resource.toObject(includeInstance, f),
    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),
    proto.Permission.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IamPolicy}
 */
proto.IamPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IamPolicy;
  return proto.IamPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IamPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IamPolicy}
 */
proto.IamPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Resource;
      reader.readMessage(value,proto.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 2:
      var value = new proto.Permission;
      reader.readMessage(value,proto.Permission.deserializeBinaryFromReader);
      msg.addPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IamPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.IamPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.IamPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.IamPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Resource.serializeBinaryToWriter
    );
  }
  f = message.getPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Permission.serializeBinaryToWriter
    );
  }
};


/**
 * optional Resource resource = 1;
 * @return {?proto.Resource}
 */
proto.IamPolicy.prototype.getResource = function() {
  return /** @type{?proto.Resource} */ (
    jspb.Message.getWrapperField(this, proto.Resource, 1));
};


/**
 * @param {?proto.Resource|undefined} value
 * @return {!proto.IamPolicy} returns this
*/
proto.IamPolicy.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.IamPolicy} returns this
 */
proto.IamPolicy.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.IamPolicy.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Permission permissions = 2;
 * @return {!Array<!proto.Permission>}
 */
proto.IamPolicy.prototype.getPermissionsList = function() {
  return /** @type{!Array<!proto.Permission>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Permission, 2));
};


/**
 * @param {!Array<!proto.Permission>} value
 * @return {!proto.IamPolicy} returns this
*/
proto.IamPolicy.prototype.setPermissionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Permission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Permission}
 */
proto.IamPolicy.prototype.addPermissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Permission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.IamPolicy} returns this
 */
proto.IamPolicy.prototype.clearPermissionsList = function() {
  return this.setPermissionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SslPolicy.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SslPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.SslPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SslPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SslPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    profile: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mintlsversion: jspb.Message.getFieldWithDefault(msg, 4, 0),
    enabledfeaturesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    customfeaturesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SslPolicy}
 */
proto.SslPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SslPolicy;
  return proto.SslPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SslPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SslPolicy}
 */
proto.SslPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.SslPolicy.Profile} */ (reader.readEnum());
      msg.setProfile(value);
      break;
    case 4:
      var value = /** @type {!proto.SslPolicy.MinTlsVersion} */ (reader.readEnum());
      msg.setMintlsversion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addEnabledfeatures(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addCustomfeatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SslPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SslPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SslPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SslPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProfile();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMintlsversion();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getEnabledfeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getCustomfeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.SslPolicy.MinTlsVersion = {
  MINTLSVERSION_UNKNOWN: 0,
  TLS_1_0: 1,
  TLS_1_1: 2,
  TLS_1_2: 3,
  TLS_1_3: 4
};

/**
 * @enum {number}
 */
proto.SslPolicy.Profile = {
  PROFILE_UNKNOWN: 0,
  COMPATIBLE: 1,
  MODERN: 2,
  RESTRICTED: 3,
  CUSTOM: 4
};

/**
 * optional google.protobuf.Timestamp creation_date = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.SslPolicy.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.SslPolicy} returns this
*/
proto.SslPolicy.prototype.setCreationDate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SslPolicy} returns this
 */
proto.SslPolicy.prototype.clearCreationDate = function() {
  return this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SslPolicy.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.SslPolicy.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SslPolicy} returns this
 */
proto.SslPolicy.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Profile profile = 3;
 * @return {!proto.SslPolicy.Profile}
 */
proto.SslPolicy.prototype.getProfile = function() {
  return /** @type {!proto.SslPolicy.Profile} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.SslPolicy.Profile} value
 * @return {!proto.SslPolicy} returns this
 */
proto.SslPolicy.prototype.setProfile = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional MinTlsVersion minTlsVersion = 4;
 * @return {!proto.SslPolicy.MinTlsVersion}
 */
proto.SslPolicy.prototype.getMintlsversion = function() {
  return /** @type {!proto.SslPolicy.MinTlsVersion} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.SslPolicy.MinTlsVersion} value
 * @return {!proto.SslPolicy} returns this
 */
proto.SslPolicy.prototype.setMintlsversion = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated string enabledFeatures = 5;
 * @return {!Array<string>}
 */
proto.SslPolicy.prototype.getEnabledfeaturesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.SslPolicy} returns this
 */
proto.SslPolicy.prototype.setEnabledfeaturesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.SslPolicy} returns this
 */
proto.SslPolicy.prototype.addEnabledfeatures = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SslPolicy} returns this
 */
proto.SslPolicy.prototype.clearEnabledfeaturesList = function() {
  return this.setEnabledfeaturesList([]);
};


/**
 * repeated string customFeatures = 6;
 * @return {!Array<string>}
 */
proto.SslPolicy.prototype.getCustomfeaturesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.SslPolicy} returns this
 */
proto.SslPolicy.prototype.setCustomfeaturesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.SslPolicy} returns this
 */
proto.SslPolicy.prototype.addCustomfeatures = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SslPolicy} returns this
 */
proto.SslPolicy.prototype.clearCustomfeaturesList = function() {
  return this.setCustomfeaturesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ServiceAccount.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ServiceAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.ServiceAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ServiceAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ServiceAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    exportedCredentialsList: jspb.Message.toObjectList(msg.getExportedCredentialsList(),
    proto.ExportedCredentials.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ServiceAccount}
 */
proto.ServiceAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ServiceAccount;
  return proto.ServiceAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ServiceAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ServiceAccount}
 */
proto.ServiceAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ExportedCredentials;
      reader.readMessage(value,proto.ExportedCredentials.deserializeBinaryFromReader);
      msg.addExportedCredentials(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ServiceAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ServiceAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ServiceAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ServiceAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExportedCredentialsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ExportedCredentials.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ExportedCredentials exported_credentials = 1;
 * @return {!Array<!proto.ExportedCredentials>}
 */
proto.ServiceAccount.prototype.getExportedCredentialsList = function() {
  return /** @type{!Array<!proto.ExportedCredentials>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ExportedCredentials, 1));
};


/**
 * @param {!Array<!proto.ExportedCredentials>} value
 * @return {!proto.ServiceAccount} returns this
*/
proto.ServiceAccount.prototype.setExportedCredentialsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ExportedCredentials=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ExportedCredentials}
 */
proto.ServiceAccount.prototype.addExportedCredentials = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ExportedCredentials, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ServiceAccount} returns this
 */
proto.ServiceAccount.prototype.clearExportedCredentialsList = function() {
  return this.setExportedCredentialsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ResourceGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.ResourceGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ResourceGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ResourceGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    environment: jspb.Message.getFieldWithDefault(msg, 1, ""),
    identifier: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ResourceGroup}
 */
proto.ResourceGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ResourceGroup;
  return proto.ResourceGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ResourceGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ResourceGroup}
 */
proto.ResourceGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ResourceGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ResourceGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ResourceGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ResourceGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string environment = 1;
 * @return {string}
 */
proto.ResourceGroup.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ResourceGroup} returns this
 */
proto.ResourceGroup.prototype.setEnvironment = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string identifier = 2;
 * @return {string}
 */
proto.ResourceGroup.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ResourceGroup} returns this
 */
proto.ResourceGroup.prototype.setIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.LoadBalancer.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.LoadBalancer.prototype.toObject = function(opt_includeInstance) {
  return proto.LoadBalancer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.LoadBalancer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LoadBalancer.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    certificatesList: jspb.Message.toObjectList(msg.getCertificatesList(),
    proto.Certificate.toObject, includeInstance),
    sslpolicy: (f = msg.getSslpolicy()) && proto.SslPolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.LoadBalancer}
 */
proto.LoadBalancer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.LoadBalancer;
  return proto.LoadBalancer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.LoadBalancer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.LoadBalancer}
 */
proto.LoadBalancer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.LoadBalancer.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.Certificate;
      reader.readMessage(value,proto.Certificate.deserializeBinaryFromReader);
      msg.addCertificates(value);
      break;
    case 3:
      var value = new proto.SslPolicy;
      reader.readMessage(value,proto.SslPolicy.deserializeBinaryFromReader);
      msg.setSslpolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.LoadBalancer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.LoadBalancer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.LoadBalancer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LoadBalancer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCertificatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Certificate.serializeBinaryToWriter
    );
  }
  f = message.getSslpolicy();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.SslPolicy.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.LoadBalancer.Type = {
  UNKNOWN_TYPE: 0,
  EXTERNAL: 1,
  INTERNAL: 2
};

/**
 * optional Type type = 1;
 * @return {!proto.LoadBalancer.Type}
 */
proto.LoadBalancer.prototype.getType = function() {
  return /** @type {!proto.LoadBalancer.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.LoadBalancer.Type} value
 * @return {!proto.LoadBalancer} returns this
 */
proto.LoadBalancer.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated Certificate certificates = 2;
 * @return {!Array<!proto.Certificate>}
 */
proto.LoadBalancer.prototype.getCertificatesList = function() {
  return /** @type{!Array<!proto.Certificate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Certificate, 2));
};


/**
 * @param {!Array<!proto.Certificate>} value
 * @return {!proto.LoadBalancer} returns this
*/
proto.LoadBalancer.prototype.setCertificatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Certificate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Certificate}
 */
proto.LoadBalancer.prototype.addCertificates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Certificate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.LoadBalancer} returns this
 */
proto.LoadBalancer.prototype.clearCertificatesList = function() {
  return this.setCertificatesList([]);
};


/**
 * optional SslPolicy sslPolicy = 3;
 * @return {?proto.SslPolicy}
 */
proto.LoadBalancer.prototype.getSslpolicy = function() {
  return /** @type{?proto.SslPolicy} */ (
    jspb.Message.getWrapperField(this, proto.SslPolicy, 3));
};


/**
 * @param {?proto.SslPolicy|undefined} value
 * @return {!proto.LoadBalancer} returns this
*/
proto.LoadBalancer.prototype.setSslpolicy = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.LoadBalancer} returns this
 */
proto.LoadBalancer.prototype.clearSslpolicy = function() {
  return this.setSslpolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.LoadBalancer.prototype.hasSslpolicy = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Certificate.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Certificate.prototype.toObject = function(opt_includeInstance) {
  return proto.Certificate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Certificate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Certificate.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    domainName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subjectAlternativeNamesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expirationDate: (f = msg.getExpirationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    issuer: jspb.Message.getFieldWithDefault(msg, 6, ""),
    signatureAlgorithm: jspb.Message.getFieldWithDefault(msg, 7, ""),
    pemCertificateChain: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Certificate}
 */
proto.Certificate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Certificate;
  return proto.Certificate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Certificate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Certificate}
 */
proto.Certificate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Certificate.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomainName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addSubjectAlternativeNames(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpirationDate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignatureAlgorithm(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPemCertificateChain(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Certificate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Certificate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Certificate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Certificate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDomainName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubjectAlternativeNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpirationDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSignatureAlgorithm();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPemCertificateChain();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.Certificate.Type = {
  UNKNOWN: 0,
  IMPORTED: 1,
  MANAGED: 2
};

/**
 * optional Type type = 1;
 * @return {!proto.Certificate.Type}
 */
proto.Certificate.prototype.getType = function() {
  return /** @type {!proto.Certificate.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Certificate.Type} value
 * @return {!proto.Certificate} returns this
 */
proto.Certificate.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string domain_name = 2;
 * @return {string}
 */
proto.Certificate.prototype.getDomainName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Certificate} returns this
 */
proto.Certificate.prototype.setDomainName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string subject_alternative_names = 3;
 * @return {!Array<string>}
 */
proto.Certificate.prototype.getSubjectAlternativeNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Certificate} returns this
 */
proto.Certificate.prototype.setSubjectAlternativeNamesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Certificate} returns this
 */
proto.Certificate.prototype.addSubjectAlternativeNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Certificate} returns this
 */
proto.Certificate.prototype.clearSubjectAlternativeNamesList = function() {
  return this.setSubjectAlternativeNamesList([]);
};


/**
 * optional google.protobuf.Timestamp creation_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Certificate.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Certificate} returns this
*/
proto.Certificate.prototype.setCreationDate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Certificate} returns this
 */
proto.Certificate.prototype.clearCreationDate = function() {
  return this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Certificate.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp expiration_date = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Certificate.prototype.getExpirationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Certificate} returns this
*/
proto.Certificate.prototype.setExpirationDate = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Certificate} returns this
 */
proto.Certificate.prototype.clearExpirationDate = function() {
  return this.setExpirationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Certificate.prototype.hasExpirationDate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string issuer = 6;
 * @return {string}
 */
proto.Certificate.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Certificate} returns this
 */
proto.Certificate.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string signature_algorithm = 7;
 * @return {string}
 */
proto.Certificate.prototype.getSignatureAlgorithm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Certificate} returns this
 */
proto.Certificate.prototype.setSignatureAlgorithm = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string pem_certificate_chain = 8;
 * @return {string}
 */
proto.Certificate.prototype.getPemCertificateChain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Certificate} returns this
 */
proto.Certificate.prototype.setPemCertificateChain = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.Resource.oneofGroups_ = [[100,101,102,103,104,105,106,107,108,109,110,111]];

/**
 * @enum {number}
 */
proto.Resource.TypeCase = {
  TYPE_NOT_SET: 0,
  VM_INSTANCE: 100,
  NETWORK: 101,
  KUBERNETES_CLUSTER: 102,
  SERVICE_ACCOUNT: 103,
  LOAD_BALANCER: 104,
  RESOURCE_GROUP: 105,
  EXPORTED_CREDENTIALS: 106,
  API_KEY: 107,
  BUCKET: 108,
  CERTIFICATE: 109,
  DATABASE: 110,
  GROUP: 111
};

/**
 * @return {proto.Resource.TypeCase}
 */
proto.Resource.prototype.getTypeCase = function() {
  return /** @type {proto.Resource.TypeCase} */(jspb.Message.computeOneofCase(this, proto.Resource.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Resource.prototype.toObject = function(opt_includeInstance) {
  return proto.Resource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Resource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Resource.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collectionUid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    displayName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    link: jspb.Message.getFieldWithDefault(msg, 5, ""),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    parent: jspb.Message.getFieldWithDefault(msg, 7, ""),
    resourceGroupName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    iamPolicy: (f = msg.getIamPolicy()) && proto.IamPolicy.toObject(includeInstance, f),
    vmInstance: (f = msg.getVmInstance()) && proto.VmInstance.toObject(includeInstance, f),
    network: (f = msg.getNetwork()) && proto.Network.toObject(includeInstance, f),
    kubernetesCluster: (f = msg.getKubernetesCluster()) && proto.KubernetesCluster.toObject(includeInstance, f),
    serviceAccount: (f = msg.getServiceAccount()) && proto.ServiceAccount.toObject(includeInstance, f),
    loadBalancer: (f = msg.getLoadBalancer()) && proto.LoadBalancer.toObject(includeInstance, f),
    resourceGroup: (f = msg.getResourceGroup()) && proto.ResourceGroup.toObject(includeInstance, f),
    exportedCredentials: (f = msg.getExportedCredentials()) && proto.ExportedCredentials.toObject(includeInstance, f),
    apiKey: (f = msg.getApiKey()) && proto.APIKey.toObject(includeInstance, f),
    bucket: (f = msg.getBucket()) && proto.Bucket.toObject(includeInstance, f),
    certificate: (f = msg.getCertificate()) && proto.Certificate.toObject(includeInstance, f),
    database: (f = msg.getDatabase()) && proto.Database.toObject(includeInstance, f),
    group: (f = msg.getGroup()) && proto.IamGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Resource}
 */
proto.Resource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Resource;
  return proto.Resource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Resource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Resource}
 */
proto.Resource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionUid(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceGroupName(value);
      break;
    case 9:
      var value = new proto.IamPolicy;
      reader.readMessage(value,proto.IamPolicy.deserializeBinaryFromReader);
      msg.setIamPolicy(value);
      break;
    case 100:
      var value = new proto.VmInstance;
      reader.readMessage(value,proto.VmInstance.deserializeBinaryFromReader);
      msg.setVmInstance(value);
      break;
    case 101:
      var value = new proto.Network;
      reader.readMessage(value,proto.Network.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 102:
      var value = new proto.KubernetesCluster;
      reader.readMessage(value,proto.KubernetesCluster.deserializeBinaryFromReader);
      msg.setKubernetesCluster(value);
      break;
    case 103:
      var value = new proto.ServiceAccount;
      reader.readMessage(value,proto.ServiceAccount.deserializeBinaryFromReader);
      msg.setServiceAccount(value);
      break;
    case 104:
      var value = new proto.LoadBalancer;
      reader.readMessage(value,proto.LoadBalancer.deserializeBinaryFromReader);
      msg.setLoadBalancer(value);
      break;
    case 105:
      var value = new proto.ResourceGroup;
      reader.readMessage(value,proto.ResourceGroup.deserializeBinaryFromReader);
      msg.setResourceGroup(value);
      break;
    case 106:
      var value = new proto.ExportedCredentials;
      reader.readMessage(value,proto.ExportedCredentials.deserializeBinaryFromReader);
      msg.setExportedCredentials(value);
      break;
    case 107:
      var value = new proto.APIKey;
      reader.readMessage(value,proto.APIKey.deserializeBinaryFromReader);
      msg.setApiKey(value);
      break;
    case 108:
      var value = new proto.Bucket;
      reader.readMessage(value,proto.Bucket.deserializeBinaryFromReader);
      msg.setBucket(value);
      break;
    case 109:
      var value = new proto.Certificate;
      reader.readMessage(value,proto.Certificate.deserializeBinaryFromReader);
      msg.setCertificate(value);
      break;
    case 110:
      var value = new proto.Database;
      reader.readMessage(value,proto.Database.deserializeBinaryFromReader);
      msg.setDatabase(value);
      break;
    case 111:
      var value = new proto.IamGroup;
      reader.readMessage(value,proto.IamGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Resource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Resource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Resource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Resource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollectionUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getResourceGroupName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIamPolicy();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.IamPolicy.serializeBinaryToWriter
    );
  }
  f = message.getVmInstance();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.VmInstance.serializeBinaryToWriter
    );
  }
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.Network.serializeBinaryToWriter
    );
  }
  f = message.getKubernetesCluster();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.KubernetesCluster.serializeBinaryToWriter
    );
  }
  f = message.getServiceAccount();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      proto.ServiceAccount.serializeBinaryToWriter
    );
  }
  f = message.getLoadBalancer();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      proto.LoadBalancer.serializeBinaryToWriter
    );
  }
  f = message.getResourceGroup();
  if (f != null) {
    writer.writeMessage(
      105,
      f,
      proto.ResourceGroup.serializeBinaryToWriter
    );
  }
  f = message.getExportedCredentials();
  if (f != null) {
    writer.writeMessage(
      106,
      f,
      proto.ExportedCredentials.serializeBinaryToWriter
    );
  }
  f = message.getApiKey();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      proto.APIKey.serializeBinaryToWriter
    );
  }
  f = message.getBucket();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      proto.Bucket.serializeBinaryToWriter
    );
  }
  f = message.getCertificate();
  if (f != null) {
    writer.writeMessage(
      109,
      f,
      proto.Certificate.serializeBinaryToWriter
    );
  }
  f = message.getDatabase();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      proto.Database.serializeBinaryToWriter
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      111,
      f,
      proto.IamGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.Resource.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection_uid = 2;
 * @return {string}
 */
proto.Resource.prototype.getCollectionUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.setCollectionUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Resource.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string display_name = 4;
 * @return {string}
 */
proto.Resource.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string link = 5;
 * @return {string}
 */
proto.Resource.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.setLink = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.Resource.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string parent = 7;
 * @return {string}
 */
proto.Resource.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string resource_group_name = 8;
 * @return {string}
 */
proto.Resource.prototype.getResourceGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.setResourceGroupName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional IamPolicy iam_policy = 9;
 * @return {?proto.IamPolicy}
 */
proto.Resource.prototype.getIamPolicy = function() {
  return /** @type{?proto.IamPolicy} */ (
    jspb.Message.getWrapperField(this, proto.IamPolicy, 9));
};


/**
 * @param {?proto.IamPolicy|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setIamPolicy = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearIamPolicy = function() {
  return this.setIamPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasIamPolicy = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional VmInstance vm_instance = 100;
 * @return {?proto.VmInstance}
 */
proto.Resource.prototype.getVmInstance = function() {
  return /** @type{?proto.VmInstance} */ (
    jspb.Message.getWrapperField(this, proto.VmInstance, 100));
};


/**
 * @param {?proto.VmInstance|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setVmInstance = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.Resource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearVmInstance = function() {
  return this.setVmInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasVmInstance = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional Network network = 101;
 * @return {?proto.Network}
 */
proto.Resource.prototype.getNetwork = function() {
  return /** @type{?proto.Network} */ (
    jspb.Message.getWrapperField(this, proto.Network, 101));
};


/**
 * @param {?proto.Network|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setNetwork = function(value) {
  return jspb.Message.setOneofWrapperField(this, 101, proto.Resource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional KubernetesCluster kubernetes_cluster = 102;
 * @return {?proto.KubernetesCluster}
 */
proto.Resource.prototype.getKubernetesCluster = function() {
  return /** @type{?proto.KubernetesCluster} */ (
    jspb.Message.getWrapperField(this, proto.KubernetesCluster, 102));
};


/**
 * @param {?proto.KubernetesCluster|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setKubernetesCluster = function(value) {
  return jspb.Message.setOneofWrapperField(this, 102, proto.Resource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearKubernetesCluster = function() {
  return this.setKubernetesCluster(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasKubernetesCluster = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional ServiceAccount service_account = 103;
 * @return {?proto.ServiceAccount}
 */
proto.Resource.prototype.getServiceAccount = function() {
  return /** @type{?proto.ServiceAccount} */ (
    jspb.Message.getWrapperField(this, proto.ServiceAccount, 103));
};


/**
 * @param {?proto.ServiceAccount|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setServiceAccount = function(value) {
  return jspb.Message.setOneofWrapperField(this, 103, proto.Resource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearServiceAccount = function() {
  return this.setServiceAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasServiceAccount = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional LoadBalancer load_balancer = 104;
 * @return {?proto.LoadBalancer}
 */
proto.Resource.prototype.getLoadBalancer = function() {
  return /** @type{?proto.LoadBalancer} */ (
    jspb.Message.getWrapperField(this, proto.LoadBalancer, 104));
};


/**
 * @param {?proto.LoadBalancer|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setLoadBalancer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 104, proto.Resource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearLoadBalancer = function() {
  return this.setLoadBalancer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasLoadBalancer = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional ResourceGroup resource_group = 105;
 * @return {?proto.ResourceGroup}
 */
proto.Resource.prototype.getResourceGroup = function() {
  return /** @type{?proto.ResourceGroup} */ (
    jspb.Message.getWrapperField(this, proto.ResourceGroup, 105));
};


/**
 * @param {?proto.ResourceGroup|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setResourceGroup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 105, proto.Resource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearResourceGroup = function() {
  return this.setResourceGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasResourceGroup = function() {
  return jspb.Message.getField(this, 105) != null;
};


/**
 * optional ExportedCredentials exported_credentials = 106;
 * @return {?proto.ExportedCredentials}
 */
proto.Resource.prototype.getExportedCredentials = function() {
  return /** @type{?proto.ExportedCredentials} */ (
    jspb.Message.getWrapperField(this, proto.ExportedCredentials, 106));
};


/**
 * @param {?proto.ExportedCredentials|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setExportedCredentials = function(value) {
  return jspb.Message.setOneofWrapperField(this, 106, proto.Resource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearExportedCredentials = function() {
  return this.setExportedCredentials(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasExportedCredentials = function() {
  return jspb.Message.getField(this, 106) != null;
};


/**
 * optional APIKey api_key = 107;
 * @return {?proto.APIKey}
 */
proto.Resource.prototype.getApiKey = function() {
  return /** @type{?proto.APIKey} */ (
    jspb.Message.getWrapperField(this, proto.APIKey, 107));
};


/**
 * @param {?proto.APIKey|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setApiKey = function(value) {
  return jspb.Message.setOneofWrapperField(this, 107, proto.Resource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearApiKey = function() {
  return this.setApiKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasApiKey = function() {
  return jspb.Message.getField(this, 107) != null;
};


/**
 * optional Bucket bucket = 108;
 * @return {?proto.Bucket}
 */
proto.Resource.prototype.getBucket = function() {
  return /** @type{?proto.Bucket} */ (
    jspb.Message.getWrapperField(this, proto.Bucket, 108));
};


/**
 * @param {?proto.Bucket|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setBucket = function(value) {
  return jspb.Message.setOneofWrapperField(this, 108, proto.Resource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearBucket = function() {
  return this.setBucket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasBucket = function() {
  return jspb.Message.getField(this, 108) != null;
};


/**
 * optional Certificate certificate = 109;
 * @return {?proto.Certificate}
 */
proto.Resource.prototype.getCertificate = function() {
  return /** @type{?proto.Certificate} */ (
    jspb.Message.getWrapperField(this, proto.Certificate, 109));
};


/**
 * @param {?proto.Certificate|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setCertificate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 109, proto.Resource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearCertificate = function() {
  return this.setCertificate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasCertificate = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional Database database = 110;
 * @return {?proto.Database}
 */
proto.Resource.prototype.getDatabase = function() {
  return /** @type{?proto.Database} */ (
    jspb.Message.getWrapperField(this, proto.Database, 110));
};


/**
 * @param {?proto.Database|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setDatabase = function(value) {
  return jspb.Message.setOneofWrapperField(this, 110, proto.Resource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearDatabase = function() {
  return this.setDatabase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional IamGroup group = 111;
 * @return {?proto.IamGroup}
 */
proto.Resource.prototype.getGroup = function() {
  return /** @type{?proto.IamGroup} */ (
    jspb.Message.getWrapperField(this, proto.IamGroup, 111));
};


/**
 * @param {?proto.IamGroup|undefined} value
 * @return {!proto.Resource} returns this
*/
proto.Resource.prototype.setGroup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 111, proto.Resource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Resource} returns this
 */
proto.Resource.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Resource.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 111) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Remediation.prototype.toObject = function(opt_includeInstance) {
  return proto.Remediation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Remediation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Remediation.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    recommendation: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Remediation}
 */
proto.Remediation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Remediation;
  return proto.Remediation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Remediation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Remediation}
 */
proto.Remediation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecommendation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Remediation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Remediation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Remediation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Remediation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRecommendation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.Remediation.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Remediation} returns this
 */
proto.Remediation.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string recommendation = 2;
 * @return {string}
 */
proto.Remediation.prototype.getRecommendation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Remediation} returns this
 */
proto.Remediation.prototype.setRecommendation = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Observation.prototype.toObject = function(opt_includeInstance) {
  return proto.Observation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Observation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Observation.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scanUid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    resource: (f = msg.getResource()) && proto.Resource.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    expectedValue: (f = msg.getExpectedValue()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f),
    observedValue: (f = msg.getObservedValue()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f),
    remediation: (f = msg.getRemediation()) && proto.Remediation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Observation}
 */
proto.Observation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Observation;
  return proto.Observation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Observation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Observation}
 */
proto.Observation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScanUid(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = new proto.Resource;
      reader.readMessage(value,proto.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setExpectedValue(value);
      break;
    case 7:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setObservedValue(value);
      break;
    case 8:
      var value = new proto.Remediation;
      reader.readMessage(value,proto.Remediation.deserializeBinaryFromReader);
      msg.setRemediation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Observation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Observation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Observation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Observation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScanUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.Resource.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExpectedValue();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getObservedValue();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getRemediation();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.Remediation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.Observation.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Observation} returns this
 */
proto.Observation.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scan_uid = 2;
 * @return {string}
 */
proto.Observation.prototype.getScanUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Observation} returns this
 */
proto.Observation.prototype.setScanUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Observation.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Observation} returns this
*/
proto.Observation.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Observation} returns this
 */
proto.Observation.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Observation.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Resource resource = 4;
 * @return {?proto.Resource}
 */
proto.Observation.prototype.getResource = function() {
  return /** @type{?proto.Resource} */ (
    jspb.Message.getWrapperField(this, proto.Resource, 4));
};


/**
 * @param {?proto.Resource|undefined} value
 * @return {!proto.Observation} returns this
*/
proto.Observation.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Observation} returns this
 */
proto.Observation.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Observation.prototype.hasResource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.Observation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Observation} returns this
 */
proto.Observation.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Value expected_value = 6;
 * @return {?proto.google.protobuf.Value}
 */
proto.Observation.prototype.getExpectedValue = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 6));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.Observation} returns this
*/
proto.Observation.prototype.setExpectedValue = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Observation} returns this
 */
proto.Observation.prototype.clearExpectedValue = function() {
  return this.setExpectedValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Observation.prototype.hasExpectedValue = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Value observed_value = 7;
 * @return {?proto.google.protobuf.Value}
 */
proto.Observation.prototype.getObservedValue = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 7));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.Observation} returns this
*/
proto.Observation.prototype.setObservedValue = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Observation} returns this
 */
proto.Observation.prototype.clearObservedValue = function() {
  return this.setObservedValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Observation.prototype.hasObservedValue = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Remediation remediation = 8;
 * @return {?proto.Remediation}
 */
proto.Observation.prototype.getRemediation = function() {
  return /** @type{?proto.Remediation} */ (
    jspb.Message.getWrapperField(this, proto.Remediation, 8));
};


/**
 * @param {?proto.Remediation|undefined} value
 * @return {!proto.Observation} returns this
*/
proto.Observation.prototype.setRemediation = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Observation} returns this
 */
proto.Observation.prototype.clearRemediation = function() {
  return this.setRemediation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Observation.prototype.hasRemediation = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ScanResultsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ScanResultsList.prototype.toObject = function(opt_includeInstance) {
  return proto.ScanResultsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ScanResultsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScanResultsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    observationsList: jspb.Message.toObjectList(msg.getObservationsList(),
    proto.Observation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ScanResultsList}
 */
proto.ScanResultsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ScanResultsList;
  return proto.ScanResultsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ScanResultsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ScanResultsList}
 */
proto.ScanResultsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Observation;
      reader.readMessage(value,proto.Observation.deserializeBinaryFromReader);
      msg.addObservations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ScanResultsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ScanResultsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ScanResultsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScanResultsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObservationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Observation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Observation observations = 1;
 * @return {!Array<!proto.Observation>}
 */
proto.ScanResultsList.prototype.getObservationsList = function() {
  return /** @type{!Array<!proto.Observation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Observation, 1));
};


/**
 * @param {!Array<!proto.Observation>} value
 * @return {!proto.ScanResultsList} returns this
*/
proto.ScanResultsList.prototype.setObservationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Observation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Observation}
 */
proto.ScanResultsList.prototype.addObservations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Observation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ScanResultsList} returns this
 */
proto.ScanResultsList.prototype.clearObservationsList = function() {
  return this.setObservationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GetStatusCollectAndScanResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.GetStatusCollectAndScanResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GetStatusCollectAndScanResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetStatusCollectAndScanResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectStatus: jspb.Message.getFieldWithDefault(msg, 1, 0),
    scanStatus: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GetStatusCollectAndScanResponse}
 */
proto.GetStatusCollectAndScanResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GetStatusCollectAndScanResponse;
  return proto.GetStatusCollectAndScanResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GetStatusCollectAndScanResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GetStatusCollectAndScanResponse}
 */
proto.GetStatusCollectAndScanResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.RequestStatus} */ (reader.readEnum());
      msg.setCollectStatus(value);
      break;
    case 2:
      var value = /** @type {!proto.RequestStatus} */ (reader.readEnum());
      msg.setScanStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GetStatusCollectAndScanResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GetStatusCollectAndScanResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GetStatusCollectAndScanResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetStatusCollectAndScanResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getScanStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional RequestStatus collect_status = 1;
 * @return {!proto.RequestStatus}
 */
proto.GetStatusCollectAndScanResponse.prototype.getCollectStatus = function() {
  return /** @type {!proto.RequestStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.RequestStatus} value
 * @return {!proto.GetStatusCollectAndScanResponse} returns this
 */
proto.GetStatusCollectAndScanResponse.prototype.setCollectStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional RequestStatus scan_status = 2;
 * @return {!proto.RequestStatus}
 */
proto.GetStatusCollectAndScanResponse.prototype.getScanStatus = function() {
  return /** @type {!proto.RequestStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.RequestStatus} value
 * @return {!proto.GetStatusCollectAndScanResponse} returns this
 */
proto.GetStatusCollectAndScanResponse.prototype.setScanStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GetStatusCollectAndScanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.GetStatusCollectAndScanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GetStatusCollectAndScanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetStatusCollectAndScanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scanId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GetStatusCollectAndScanRequest}
 */
proto.GetStatusCollectAndScanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GetStatusCollectAndScanRequest;
  return proto.GetStatusCollectAndScanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GetStatusCollectAndScanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GetStatusCollectAndScanRequest}
 */
proto.GetStatusCollectAndScanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScanId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GetStatusCollectAndScanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GetStatusCollectAndScanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GetStatusCollectAndScanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetStatusCollectAndScanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScanId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string collect_id = 1;
 * @return {string}
 */
proto.GetStatusCollectAndScanRequest.prototype.getCollectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.GetStatusCollectAndScanRequest} returns this
 */
proto.GetStatusCollectAndScanRequest.prototype.setCollectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scan_id = 2;
 * @return {string}
 */
proto.GetStatusCollectAndScanRequest.prototype.getScanId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.GetStatusCollectAndScanRequest} returns this
 */
proto.GetStatusCollectAndScanRequest.prototype.setScanId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CollectAndScanRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CollectAndScanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CollectAndScanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CollectAndScanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CollectAndScanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceGroupNamesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CollectAndScanRequest}
 */
proto.CollectAndScanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CollectAndScanRequest;
  return proto.CollectAndScanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CollectAndScanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CollectAndScanRequest}
 */
proto.CollectAndScanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addResourceGroupNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CollectAndScanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CollectAndScanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CollectAndScanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CollectAndScanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceGroupNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string resource_group_names = 1;
 * @return {!Array<string>}
 */
proto.CollectAndScanRequest.prototype.getResourceGroupNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.CollectAndScanRequest} returns this
 */
proto.CollectAndScanRequest.prototype.setResourceGroupNamesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.CollectAndScanRequest} returns this
 */
proto.CollectAndScanRequest.prototype.addResourceGroupNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CollectAndScanRequest} returns this
 */
proto.CollectAndScanRequest.prototype.clearResourceGroupNamesList = function() {
  return this.setResourceGroupNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CollectAndScanResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CollectAndScanResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CollectAndScanResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CollectAndScanResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scanId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CollectAndScanResponse}
 */
proto.CollectAndScanResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CollectAndScanResponse;
  return proto.CollectAndScanResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CollectAndScanResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CollectAndScanResponse}
 */
proto.CollectAndScanResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScanId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CollectAndScanResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CollectAndScanResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CollectAndScanResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CollectAndScanResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScanId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string collect_id = 1;
 * @return {string}
 */
proto.CollectAndScanResponse.prototype.getCollectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CollectAndScanResponse} returns this
 */
proto.CollectAndScanResponse.prototype.setCollectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scan_id = 2;
 * @return {string}
 */
proto.CollectAndScanResponse.prototype.getScanId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.CollectAndScanResponse} returns this
 */
proto.CollectAndScanResponse.prototype.setScanId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ListObservationsRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ListObservationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ListObservationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ListObservationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListObservationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    resourceGroupNamesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListObservationsRequest}
 */
proto.ListObservationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ListObservationsRequest;
  return proto.ListObservationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListObservationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListObservationsRequest}
 */
proto.ListObservationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addResourceGroupNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListObservationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ListObservationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListObservationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListObservationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getResourceGroupNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string page_token = 1;
 * @return {string}
 */
proto.ListObservationsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ListObservationsRequest} returns this
 */
proto.ListObservationsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.ListObservationsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ListObservationsRequest} returns this
 */
proto.ListObservationsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated string resource_group_names = 3;
 * @return {!Array<string>}
 */
proto.ListObservationsRequest.prototype.getResourceGroupNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ListObservationsRequest} returns this
 */
proto.ListObservationsRequest.prototype.setResourceGroupNamesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ListObservationsRequest} returns this
 */
proto.ListObservationsRequest.prototype.addResourceGroupNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ListObservationsRequest} returns this
 */
proto.ListObservationsRequest.prototype.clearResourceGroupNamesList = function() {
  return this.setResourceGroupNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CreateObservationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CreateObservationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CreateObservationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateObservationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    observation: (f = msg.getObservation()) && proto.Observation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CreateObservationRequest}
 */
proto.CreateObservationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CreateObservationRequest;
  return proto.CreateObservationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CreateObservationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CreateObservationRequest}
 */
proto.CreateObservationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Observation;
      reader.readMessage(value,proto.Observation.deserializeBinaryFromReader);
      msg.setObservation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CreateObservationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CreateObservationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CreateObservationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateObservationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObservation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Observation.serializeBinaryToWriter
    );
  }
};


/**
 * optional Observation observation = 1;
 * @return {?proto.Observation}
 */
proto.CreateObservationRequest.prototype.getObservation = function() {
  return /** @type{?proto.Observation} */ (
    jspb.Message.getWrapperField(this, proto.Observation, 1));
};


/**
 * @param {?proto.Observation|undefined} value
 * @return {!proto.CreateObservationRequest} returns this
*/
proto.CreateObservationRequest.prototype.setObservation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CreateObservationRequest} returns this
 */
proto.CreateObservationRequest.prototype.clearObservation = function() {
  return this.setObservation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CreateObservationRequest.prototype.hasObservation = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RuleObservationPair.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RuleObservationPair.prototype.toObject = function(opt_includeInstance) {
  return proto.RuleObservationPair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RuleObservationPair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RuleObservationPair.toObject = function(includeInstance, msg) {
  var f, obj = {
    rule: jspb.Message.getFieldWithDefault(msg, 1, ""),
    observationsList: jspb.Message.toObjectList(msg.getObservationsList(),
    proto.Observation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RuleObservationPair}
 */
proto.RuleObservationPair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RuleObservationPair;
  return proto.RuleObservationPair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RuleObservationPair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RuleObservationPair}
 */
proto.RuleObservationPair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRule(value);
      break;
    case 2:
      var value = new proto.Observation;
      reader.readMessage(value,proto.Observation.deserializeBinaryFromReader);
      msg.addObservations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RuleObservationPair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RuleObservationPair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RuleObservationPair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RuleObservationPair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRule();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getObservationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Observation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string rule = 1;
 * @return {string}
 */
proto.RuleObservationPair.prototype.getRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.RuleObservationPair} returns this
 */
proto.RuleObservationPair.prototype.setRule = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Observation observations = 2;
 * @return {!Array<!proto.Observation>}
 */
proto.RuleObservationPair.prototype.getObservationsList = function() {
  return /** @type{!Array<!proto.Observation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Observation, 2));
};


/**
 * @param {!Array<!proto.Observation>} value
 * @return {!proto.RuleObservationPair} returns this
*/
proto.RuleObservationPair.prototype.setObservationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Observation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Observation}
 */
proto.RuleObservationPair.prototype.addObservations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Observation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.RuleObservationPair} returns this
 */
proto.RuleObservationPair.prototype.clearObservationsList = function() {
  return this.setObservationsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ResourceGroupObservationsPair.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ResourceGroupObservationsPair.prototype.toObject = function(opt_includeInstance) {
  return proto.ResourceGroupObservationsPair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ResourceGroupObservationsPair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ResourceGroupObservationsPair.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceGroupName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rulesObservationsList: jspb.Message.toObjectList(msg.getRulesObservationsList(),
    proto.RuleObservationPair.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ResourceGroupObservationsPair}
 */
proto.ResourceGroupObservationsPair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ResourceGroupObservationsPair;
  return proto.ResourceGroupObservationsPair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ResourceGroupObservationsPair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ResourceGroupObservationsPair}
 */
proto.ResourceGroupObservationsPair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceGroupName(value);
      break;
    case 2:
      var value = new proto.RuleObservationPair;
      reader.readMessage(value,proto.RuleObservationPair.deserializeBinaryFromReader);
      msg.addRulesObservations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ResourceGroupObservationsPair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ResourceGroupObservationsPair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ResourceGroupObservationsPair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ResourceGroupObservationsPair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceGroupName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRulesObservationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.RuleObservationPair.serializeBinaryToWriter
    );
  }
};


/**
 * optional string resource_group_name = 1;
 * @return {string}
 */
proto.ResourceGroupObservationsPair.prototype.getResourceGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ResourceGroupObservationsPair} returns this
 */
proto.ResourceGroupObservationsPair.prototype.setResourceGroupName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated RuleObservationPair rules_observations = 2;
 * @return {!Array<!proto.RuleObservationPair>}
 */
proto.ResourceGroupObservationsPair.prototype.getRulesObservationsList = function() {
  return /** @type{!Array<!proto.RuleObservationPair>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RuleObservationPair, 2));
};


/**
 * @param {!Array<!proto.RuleObservationPair>} value
 * @return {!proto.ResourceGroupObservationsPair} returns this
*/
proto.ResourceGroupObservationsPair.prototype.setRulesObservationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.RuleObservationPair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.RuleObservationPair}
 */
proto.ResourceGroupObservationsPair.prototype.addRulesObservations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.RuleObservationPair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ResourceGroupObservationsPair} returns this
 */
proto.ResourceGroupObservationsPair.prototype.clearRulesObservationsList = function() {
  return this.setRulesObservationsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ListObservationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ListObservationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ListObservationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ListObservationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListObservationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceGroupsObservationsList: jspb.Message.toObjectList(msg.getResourceGroupsObservationsList(),
    proto.ResourceGroupObservationsPair.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListObservationsResponse}
 */
proto.ListObservationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ListObservationsResponse;
  return proto.ListObservationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListObservationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListObservationsResponse}
 */
proto.ListObservationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ResourceGroupObservationsPair;
      reader.readMessage(value,proto.ResourceGroupObservationsPair.deserializeBinaryFromReader);
      msg.addResourceGroupsObservations(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListObservationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ListObservationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListObservationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListObservationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceGroupsObservationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ResourceGroupObservationsPair.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated ResourceGroupObservationsPair resource_groups_observations = 1;
 * @return {!Array<!proto.ResourceGroupObservationsPair>}
 */
proto.ListObservationsResponse.prototype.getResourceGroupsObservationsList = function() {
  return /** @type{!Array<!proto.ResourceGroupObservationsPair>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ResourceGroupObservationsPair, 1));
};


/**
 * @param {!Array<!proto.ResourceGroupObservationsPair>} value
 * @return {!proto.ListObservationsResponse} returns this
*/
proto.ListObservationsResponse.prototype.setResourceGroupsObservationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ResourceGroupObservationsPair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ResourceGroupObservationsPair}
 */
proto.ListObservationsResponse.prototype.addResourceGroupsObservations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ResourceGroupObservationsPair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ListObservationsResponse} returns this
 */
proto.ListObservationsResponse.prototype.clearResourceGroupsObservationsList = function() {
  return this.setResourceGroupsObservationsList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.ListObservationsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ListObservationsResponse} returns this
 */
proto.ListObservationsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.RequestStatus = {
  UNKNOWN: 0,
  DONE: 1,
  RUNNING: 2,
  ALREADY_RUNNING: 3,
  CANCELLED: 4
};

goog.object.extend(exports, proto);
